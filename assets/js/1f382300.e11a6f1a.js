"use strict";(self.webpackChunkhabari_docs=self.webpackChunkhabari_docs||[]).push([[256],{276:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>h,contentTitle:()=>d,default:()=>y,frontMatter:()=>c,metadata:()=>u,toc:()=>m});var a=t(5893),r=t(1151),i=t(3615),s=t(6775),o=t(2477),l=t(5110);const c={sidebar_position:2},d="Initiate Payment",u={id:"Payments/Initiate-payment",title:"Initiate Payment",description:"This API allows you to initiate transaction by making calls from your server which returns a URL that when visited will call up our payment modal.",source:"@site/docs/Payments/Initiate-payment.mdx",sourceDirName:"Payments",slug:"/Payments/Initiate-payment",permalink:"/squad-docs/Payments/Initiate-payment",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Payments/Initiate-payment.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Payments",permalink:"/squad-docs/Payments/overview"},next:{title:"Squad Payment Modal",permalink:"/squad-docs/Payments/squad-payment-modal"}},h={},m=[{value:"This API allows you to initiate transaction by making calls from your server which returns a URL that when visited will call up our payment modal.",id:"this-api-allows-you-to-initiate-transaction-by-making-calls-from-your-server-which-returns-a-url-that-when-visited-will-call-up-our-payment-modal",level:5},{value:"Sample Request",id:"sample-request",level:3},{value:"Recurring Payment (Charge Authorization on Card)",id:"recurring-payment-charge-authorization-on-card",level:3},{value:"Card Tokenization",id:"card-tokenization",level:3},{value:"Sample Request for Card Tokenization",id:"sample-request-for-card-tokenization",level:3},{value:"Charge Card",id:"charge-card",level:3},{value:"Sample Request",id:"sample-request-1",level:3},{value:"Go Live",id:"go-live",level:3}];function p(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h3:"h3",h5:"h5",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,r.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h1,{id:"initiate-payment",children:"Initiate Payment"}),"\n",(0,a.jsx)(n.h5,{id:"this-api-allows-you-to-initiate-transaction-by-making-calls-from-your-server-which-returns-a-url-that-when-visited-will-call-up-our-payment-modal",children:"This API allows you to initiate transaction by making calls from your server which returns a URL that when visited will call up our payment modal."}),"\n",(0,a.jsx)(n.admonition,{type:"caution",children:(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Authorization"})," Any request made without the authorization key (secret key) will fail with a ** 401 ** (Unauthorized) response code."]})}),"\n",(0,a.jsx)(n.admonition,{type:"info",children:(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"The authorization key is sent via the request header as Bearer Token Authorization"})})}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Example"}),":\nAuthorization: Bearer sandbox_sk_94f2b798466408ef4d19e848ee1a4d1a3e93f104046f"]}),"\n",(0,a.jsx)(l.Z,{}),"\n",(0,a.jsx)(i.Z,{items:o.rQ,parameters:!0,endpoint:"https://sandbox-api-d.squadco.com/transaction/initiate",method:"POST",summary:"This endpoint returns a checkout URL that when visited calls up the modal with the various payment channel."}),"\n",(0,a.jsx)(s.C,{items:o.K_}),"\n",(0,a.jsx)(n.h3,{id:"sample-request",children:"Sample Request"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:'{\n    "amount":43000,\n    "email":"henimastic@gmail.com",\n    "currency":"NGN",\n    "initiate_type": "inline",\n    "transaction_ref":"4678388588350909090AH",\n    "callback_url":"http://squadco.com"\n}\n'})}),"\n",(0,a.jsx)(n.h3,{id:"recurring-payment-charge-authorization-on-card",children:"Recurring Payment (Charge Authorization on Card)"}),"\n",(0,a.jsx)(n.p,{children:"This allows you charge a card without collecting the card information each time\nAuthorization Any request made without the authorization key (secret key) will fail with a 401 (Unauthorized) response code."}),"\n",(0,a.jsx)(n.admonition,{type:"caution",children:(0,a.jsx)(n.p,{children:"Authorization Any request made without the authorization key (secret key) will fail with a 401 (Unauthorized) response code."})}),"\n",(0,a.jsx)(n.admonition,{type:"info",children:(0,a.jsx)(n.p,{children:"The authorization key is sent via the request header as Bearer Token Authorization"})}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Example:"}),"\nAuthorization: Bearer sandbox_sk_94f2b798466408ef4d19e848ee1a4d1a3e93f104046f"]}),"\n",(0,a.jsx)(n.h3,{id:"card-tokenization",children:"Card Tokenization"}),"\n",(0,a.jsx)(n.p,{children:"To tokenize a card, just add a flag to the initiate payload when calling the initiate endpoint and the card will automatically be tokenized. The unique token code will automatically be added to the webhook notification that will be received after payment."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:'"is_recurring":true\n'})}),"\n",(0,a.jsx)(n.h3,{id:"sample-request-for-card-tokenization",children:"Sample Request for Card Tokenization"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:'{\n    "amount":43000,\n    "email":"henimastic@gmail.com",\n    "currency":"NGN",\n    "initiate_type": "inline",\n    "transaction_ref":"bchs4678388588350909090AH",\n    "callback_url":"http://squadco.com",\n    "is_recurring":true\n}\n'})}),"\n",(0,a.jsx)(n.h3,{id:"charge-card",children:"Charge Card"}),"\n",(0,a.jsx)(n.p,{children:"This allows you charge a card using the token generated during the initial transaction which was sent via webhook"}),"\n",(0,a.jsx)(i.Z,{items:o.D5,parameters:!0,endpoint:"https://sandbox-api-d.squadco.com/transaction/charge_card",method:"POST",summary:"This endpoint returns a checkout URL that when visited calls up the modal with the various payment channel."}),"\n",(0,a.jsx)(s.C,{items:o.yJ}),"\n",(0,a.jsx)(n.h3,{id:"sample-request-1",children:"Sample Request"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:'{\n    "amount":10000,\n    "token_id":"tJlYMKcwPd",\n}\n'})}),"\n",(0,a.jsx)(n.h3,{id:"go-live",children:"Go Live"}),"\n",(0,a.jsx)(n.p,{children:"To go live, simply:"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsx)(n.li,{children:"Change the base URL of your endpoints from sandbox-api-d.squadco.com to\napi-d.squadco.com"}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"https://dashboard.squadco.com/login",children:"Sign up on our Live Environment"})}),"\n",(0,a.jsx)(n.li,{children:"Complete your KYC"}),"\n",(0,a.jsx)(n.li,{children:"Use the secret key provided on the dashboard to replace the test keys gotten from the sandbox environment to authenticate your live transactions."}),"\n"]})]})}function y(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(p,{...e})}):p(e)}},5110:(e,n,t)=>{t.d(n,{Z:()=>c});var a=t(7294),r=t(9286),i=t(5893);const s=e=>{let{selectedLanguage:n,setSelectedLanguage:t}=e;const[r,s]=(0,a.useState)(!1),o=(0,a.useRef)(null),l=e=>{o.current&&!o.current.contains(e.target)&&s(!1)};return(0,a.useEffect)((()=>(document.addEventListener("click",l),()=>{document.removeEventListener("click",l)})),[]),(0,i.jsxs)("div",{className:"group",ref:o,children:[(0,i.jsxs)("div",{onClick:()=>s(!r),className:"flex cursor-pointer",children:[(0,i.jsx)("p",{className:"text-[#3F826D] text-[10px] md:text-xs dark:text-[#4CB393]",children:n}),(0,i.jsx)("span",{children:(0,i.jsx)("svg",{xmlns:"http://www.w3.org/2000/svg",height:"1em",viewBox:"0 0 448 512",className:"fill-[#008488] dark:fill-[#4CB393] ml-1 mt-[2px]",children:(0,i.jsx)("path",{d:"M201.4 342.6c12.5 12.5 32.8 12.5 45.3 0l160-160c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L224 274.7 86.6 137.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3l160 160z"})})})]}),r&&(0,i.jsx)("div",{className:"absolute z-20 m-0 top-11 right-0 p-1 bg-transparent border border-solid border-[#EBEBF2] dark:border-[#303337] rounded w-24",children:["cURL","Javascript","Dart"].map((e=>(0,i.jsx)("p",{onClick:()=>(e=>{t(e),s(!1)})(e),className:"px-2 text-xs m-0 py-2 cursor-pointer hover:bg-[#E2EEF5] dark:hover:bg-[#101417] text-[#424242] dark:text-[#E2E8EF] rounded",children:e},e)))})]})};var o=t(7536),l=(t(6310),t(8388));const c=()=>{const[e,n]=a.useState(!1),[t,c]=(0,a.useState)(""),[d,u]=(0,a.useState)(""),[h,m]=(0,a.useState)("cURL");let p=`\n  const axios = require('axios');\n  let data = JSON.stringify({\n    "amount":${t?t+",":"_ ,"}\n    "email":${d?d+" ":"_ "},\n    "currency": "NGN",\n    "initiate_type": "inline",\n    "CallBack_URL": "https://www.linkedin.com/",\n    "is_recurring": true\n  });\n  \n  let config = {\n    method: 'post',\n    maxBodyLength: Infinity,\n    url: 'https://qa-api.squadinc.co/payment/Initiate',\n    headers: { \n      'Authorization': '47M3DMZD', \n      'Content-Type': 'application/json'\n    },\n    data : data\n  };\n  \n  axios.request(config)\n  .then((response) => {\n    console.log(JSON.stringify(response.data));\n  })\n  .catch((error) => {\n    console.log(error);\n  });\n  \n`,y=`\n  var headers = {\n    'Authorization': '47M3DMZD',\n    'Content-Type': 'application/json'\n  };\n  var request = http.Request('POST', Uri.parse('https://qa-api.squadinc.co/payment/Initiate'));\n  request.body = json.encode({\n    "amount":${t?t+",":"_ ,"}\n    "email":${d?d+" ":"_ "},\n    "currency": "NGN",\n    "initiate_type": "inline",\n    "CallBack_URL": "https://www.linkedin.com/",\n    "is_recurring": true\n  });\n  request.headers.addAll(headers);\n  \n  http.StreamedResponse response = await request.send();\n  \n  if (response.statusCode == 200) {\n    print(await response.stream.bytesToString());\n  }\n  else {\n    print(response.reasonPhrase);\n  }\n  \n`,g=`\n  curl --location 'https://qa-api.squadinc.co/payment/Initiate' \n  --header 'Authorization: 47M3DMZD'\n  --header 'Content-Type: application/json'\n  --data-raw '{\n    "amount":${t?t+",":"_ ,"}\n    "email":${d?d+" ":"_ "},\n      "currency":"NGN",\n      "initiate_type": "inline",\n      "CallBack_URL" : "https://www.linkedin.com/",\n      "is_recurring": true\n  }\n  '\n`;const{register:x,handleSubmit:f,formState:{errors:b}}=(0,o.cI)();return(0,i.jsxs)("div",{className:"flex flex-col justify-center align-middle border-2 border-solid border-[#EBEBF2] dark:border-[#303337] rounded-lg md:px-5 px-2",children:[(0,i.jsxs)("div",{className:"relative h-10 flex justify-between pt-3.5 text-[11px] md:text-[13px] leading-[10px]  border-b-2 border-0 border-solid border-[#EBEBF2] dark:border-b-[#303337]",children:[(0,i.jsxs)("div",{className:"flex ",children:[(0,i.jsx)("p",{className:"text-[#3F826D] font-semibold dark:text-[#4CB393]",children:"POST"}),(0,i.jsx)("p",{className:"text-[rgba(45,72,117,0.70)] dark:text-[#a8b7cc] pl-2 md:pl-4",children:"api.squad.co/payment/Initiate"})]}),(0,i.jsx)(s,{selectedLanguage:h,setSelectedLanguage:m})]}),(0,i.jsxs)("div",{className:"pt-8",children:[(0,i.jsx)("h4",{className:"text-[#0B3142] leading-3 dark:text-[#E2E8EF]",children:"Enter Payment details"}),(0,i.jsx)("p",{className:"text-sm text-[#475569] leading-3 dark:text-[#94A3B8]",children:"Help us send transactions receipts to the customers"})]}),(0,i.jsxs)("div",{className:"py-6 md:grid md:grid-cols-2 md:gap-9 items-center",children:[(0,i.jsx)("div",{className:"",children:(0,i.jsxs)("form",{className:"text-base",onSubmit:f((e=>{console.log(e),function(){console.log("fired here");const e={amount:1e3*Number(t),email:d,currency_code:"NGN",key:"qa_pk_sample-public-key-1",is_recurring:!0,initiate_type:"inline"},a=new window.squad({onClose:()=>{console.log("Widget closed"),n(!1)},onLoad:()=>{console.log("Widget loaded successfully"),n(!1)},onSuccess:()=>{setPaymentSuccess(!0)},...e});a.setup(),a.open()}()})),children:[(0,i.jsxs)("div",{className:"flex flex-col",children:[(0,i.jsx)("label",{className:"pb-1 text-sm",htmlFor:"amount",children:"Charge Amount (\u20a6)"}),(0,i.jsx)("input",{id:"amount",type:"text",placeholder:"e.g 10000",...x("amount",{required:"Amount is required",onChange:e=>{c(e.target.value)}}),className:(0,l.m6)("rounded-[4px] px-3 py-3 mb-5 border-[#BDBDBD] border-solid border placeholder:text-[#828282] dark:bg-transparent ",b?.amount&&"border-red-500")}),b.amount&&(0,i.jsx)("p",{className:"text-red-600 text-xs m-0 p-0 pt-1 transition-all",children:b.amount.message})]}),(0,i.jsxs)("div",{className:"flex flex-col",children:[(0,i.jsx)("label",{className:"pb-1 text-sm",htmlFor:"email",children:"Customer Email Address"}),(0,i.jsx)("input",{id:"email",type:"email",placeholder:"e.g example@email.com",...x("email",{required:"Please provide a valid email",onChange:e=>{u(e.target.value)}}),className:(0,l.m6)("rounded-[4px] px-3 py-3 border-[#BDBDBD] border-solid border placeholder:text-[#828282] dark:bg-transparent",b?.email&&"border-red-500")}),b.email&&(0,i.jsx)("p",{className:"text-red-600 text-xs m-0 p-0 pt-1 transition-all",children:b.email.message})]}),(0,i.jsx)("button",{type:"submit",className:"bg-[#e51e56] w-full hover:bg-[#d43d68] border-none text-white mt-7 mb-2 py-3 rounded-[4px] font-semibold cursor-pointer",children:"Send Request"})]})}),(0,i.jsx)("div",{className:"",children:(0,i.jsx)(r.Z,{className:"language-jsx h-64 overflow-scroll",children:"cURL"===h?g:"Javascript"===h?p:y})}),(0,i.jsx)("div",{})]})]})}},2477:(e,n,t)=>{t.d(n,{D5:()=>s,K_:()=>i,nN:()=>c,nQ:()=>l,rQ:()=>r,yJ:()=>o});var a=t(8830);const r=[{title:"Header",children:[{key:"Authorization",dataType:"String",description:"API keys (Secret Key) that authorize your transactions and gotten from your squad dashboard",required:!0}]},{title:"Body",children:[{key:"email",dataType:"String",description:"Customer's email address.",required:!0},{key:"amount",dataType:"String",description:"The amount you are debiting customer (expressed in the lowest currency value - kobo& cent). 10000 = 100NGN for Naira Transactions",required:!0},{key:"initiate_type",dataType:"String",description:"This states the method by which the transaction is initiated. At the moment, this can only take the value 'inline'.",required:!0},{key:"currency",dataType:"String",description:"The currency you want the amount to be charged in. Allowed value is either NGN or USD.",required:!0},{key:"transaction_ref",dataType:"String",description:"This states the method by which the transaction is initiated. At the moment, this can only take the value 'inline'.",required:!0},{key:"initiate_type",dataType:"String",description:"An alphanumeric string that uniquely identifies a transaction",required:!1},{key:"customer_name",dataType:"String",description:"Name of Customer carrying out the transaction",required:!1},{key:"callback_url",dataType:"String",description:"Sample: http://squadco.com",required:!1},{key:"payment_channels",dataType:"Array",description:"An array of payment channels to control what channels you want to make available for the user to make a payment with. Available channels include; ['card', 'bank' , 'ussd','transfer']",required:!1},{key:"metadata",dataType:"Object",description:"Object that contains any additional information that you want to record with the transaction. The custom fields in the object will be returned via webhook and the payment verification endpoint.",required:!1},{key:"pass_charge",dataType:"Boolean",description:"It takes two possible values: True or False. It is set to False by default. When set to True, the charges on the transaction is computed and passed on to the customer(payer). But when set to False, the charge is passed to the merchant and will be deducted from the amount to be settled to the merchant.",required:!1},{key:"callback_url",dataType:"String",description:"Sample: http://squadco.com",required:!1}]}],i=[{status:"200:OK",responseMsg:"Successful",pill:a.O?.greenColor,code:'{\n    "status": 200,\n    "message": "success",\n    "data": {\n        "auth_url": null,\n        "access_token": null,\n        "merchant_info": {\n            "merchant_response": null,\n            "merchant_name": null,\n            "merchant_logo": null,\n            "merchant_id": "SBN1EBZEQ8"\n        },\n        "currency": "NGN",\n        "recurring": {\n            "frequency": null,\n            "duration": null,\n            "type": 0,\n            "plan_code": null,\n            "customer_name": null\n        },\n        "is_recurring": false,\n        "plan_code": null,\n        "callback_url": "http://squadco.com",\n        "transaction_ref": "4678388588350909090AH",\n        "transaction_memo": null,\n        "transaction_amount": 43000,\n        "authorized_channels": [\n            "card",\n            "ussd",\n            "bank"\n        ],\n        "checkout_url": "https://sandbox-pay.squadco.com/4678388588350909090AH"\n    }\n}\n\n'},{status:"401:Unauthorized",responseMsg:"Invalid/No Authorization Key",pill:a.O?.orangeColor,code:'{\n            "status": 401,\n            "message": "Initiate transaction Unauthorized",\n            "data": null\n}'},{status:"400:Bad Request",responseMsg:"Bad Request",pill:a.O?.orangeColor,code:'{\n        "type": "https://tools.ietf.org/html/rfc7231#section-6.5.1",\n        "title": "One or more validation errors occurred.",\n        "status": 400,\n        "traceId": "|8aec540f-493270cdd9661378.",\n        "errors": {\n            "email": [\n                "The email field is required."\n            ]\n        }\n}\n'}],s=[{title:"Body",children:[{key:"amount",dataType:"Integer",description:"Amount to charge from card in the lowest currency value. kobo for NGN transactions or cent for USD transactions",required:!0},{key:"token_id",dataType:"String",description:"A unique tokenization code for each card transaction and it is returned via the webhook for first charge on the card.",required:!0},{key:"transaction_ref",dataType:"String",description:"Unique case-sensitive transaction reference. If you do not pass this parameter, Squad will generate a unique reference for you.",required:!1}]}],o=[{status:"200:OK",responseMsg:"Successful",pill:a.O?.greenColor,code:'{\n            "status": 200,\n            "success": true,\n            "message": "Success",\n            "data": {\n                "transaction_amount": 0,\n                "transaction_ref": null,\n                "email": null,\n                "transaction_status": null,\n                "transaction_currency_id": null,\n                "created_at": "0001-01-01T00:00:00",\n                "transaction_type": null,\n                "merchant_name": null,\n                "merchant_business_name": null,\n                "gateway_transaction_ref": null,\n                "recurring": null,\n                "merchant_email": null,\n                "plan_code": null\n            }\n}'},{status:"400:Bad Request",responseMsg:"Bad Request",pill:a.O?.orangeColor,code:'{\n            "status": 400,\n            "success": false,\n            "message": "amount cannot be < 0",\n            "data": {}\n}'}],l=[{title:"Query",children:[{key:"transaction_ref",dataType:"String",description:"Unique transaction reference that identifies each transaction",required:!0}]}],c=[{status:"200:OK",responseMsg:"Valid Transaction Reference",pill:a.O?.greenColor,code:'{\n            "status": 200,\n            "success": true,\n            "message": "Success",\n            "data": {\n                "transaction_amount": 5000,\n                "transaction_ref": "SQCHIZ3634573076082",\n                "email": "ayo@gmail.com",\n                "transaction_status": "Success",\n                "transaction_currency_id": "NGN",\n                "created_at": "0001-01-01T00:00:00",\n                "transaction_type": "VirtualAccount",\n                "merchant_name": "CHIZOBA ANTHONY",\n                "merchant_business_name": null,\n                "gateway_transaction_ref": "SQCHIZ3634573076082",\n                "recurring": null,\n                "merchant_email": "okoyeanthonychizoba@gmail.com",\n                "plan_code": null\n            }\n}\n'},{status:"400:Bad Request",responseMsg:"Invalid Transaction Reference",pill:a.O?.orangeColor,code:'{\n            "status": 400,\n            "success": false,\n            "message": "Invalid transaction reference",\n            "data": {}\n}'},{status:"401:Unauthorized",responseMsg:"Unauthorized Request",pill:a.O?.orangeColor,code:'{\n            "success": false,\n            "message": "",\n            "data": {}\n}'},{status:"403:Forbidden",responseMsg:"Invalid API Key",pill:a.O?.orangeColor,code:'{\n            "success": false,\n            "message": "API key is invalid. Key must start with sandbox_sk_",\n            "data": {}\n}'}]}}]);