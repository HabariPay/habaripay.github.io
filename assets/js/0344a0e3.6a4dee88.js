"use strict";(self.webpackChunkhabari_docs=self.webpackChunkhabari_docs||[]).push([[885],{7888:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>j,contentTitle:()=>x,default:()=>_,frontMatter:()=>v,metadata:()=>b,toc:()=>A});var t=a(5893),s=a(1151),i=a(3615),o=a(6775),r=a(8830);const c=[{status:"200:OK",responseMsg:"Success",pill:r.O?.greenColor,code:'{\n              "status": 200,\n              "success": true,\n              "message": "Success",\n              "data": {}\n  }'},{status:"401:Unauthorized",responseMsg:"No Authorization",pill:r.O?.orangeColor,code:'{\n              "success": false,\n              "message": "",\n              "data": {}\n  }'},{status:"403:Forbidden",responseMsg:"Invalid/Wrong Authorization",pill:r.O?.orangeColor,code:'{\n              "success": false,\n              "message": "Merchant authentication failed",\n              "data": {}\n  }'}],d=[{status:"200:OK",responseMsg:"Success",pill:r.O?.greenColor,code:'{\n              "status": 200,\n              "success": true,\n              "message": "Success",\n              "data": {\n                  "count_dynamic_virtual_account": 8\n              }\n  }'},{status:"401:Unauthorized",responseMsg:"No Authorization",pill:r.O?.orangeColor,code:'{\n              "success": false,\n              "message": "",\n              "data": {}\n  }'},{status:"403:Forbidden",responseMsg:"Invalid/Wrong API Keys",pill:r.O?.orangeColor,code:'{\n              "success": false,\n              "message": "Merchant authentication failed",\n              "data": {}\n  }'}],l=[{title:"Body",children:[{key:"amount",dataType:"Integer",description:"Amount is in Kobo",required:!0},{key:"duration",dataType:"Integer",description:"Time allowed before an account/transaction is expired. Duration is in seconds. i.e duration:60 = 1 minute",required:!0},{key:"email",dataType:"string",description:"a valid email address for notification to customer",required:!0},{key:"transaction_ref",dataType:"string",description:"Unique transaction Reference that identifies the transaction on your system",required:!0}]}],u=[{status:"200:OK",responseMsg:"Success",pill:r.O?.greenColor,code:'{\n              "status": 200,\n              "success": true,\n              "message": "Success",\n              "data": {\n                  "is_blocked": false,\n                  "account_name": "SQUAD CHECKOUT",\n                  "account_number": "4879261135",\n                  "expected_amount": "100.00",\n                  "expires_at": "2023-08-08T08:23:27.791Z",\n                  "transaction_reference": "dva123",\n                  "bank": "GTBank",\n                  "currency": "NGN"\n              }\n  }'},{status:"401:Unauthorized",responseMsg:"No Authorization",pill:r.O?.orangeColor,code:'{\n              "success": false,\n              "message": "",\n              "data": {}\n  }'},{status:"403:Forbidden",responseMsg:"Wrong/Invalid API Keys",pill:r.O?.greenColor,code:'{\n              "success": false,\n              "message": "Merchant authentication failed",\n              "data": {}\n  }'}],h=[{title:"Path",children:[{key:"transaction_reference",dataType:"String",description:"Merchant's transaction reference passed when initiating / generating the dynamic virtual account.",required:!0}]}],m=[{status:"200:OK",responseMsg:"Success",pill:r.O?.greenColor,code:'{\n              "status": 200,\n              "success": true,\n              "message": "Success",\n              "data": {\n                  "count": 3,\n                  "rows": [\n                      {\n                          "transaction_status": "EXPIRED",\n                          "transaction_reference": "Aq1111BddCDqdddqdqqEw4",\n                          "created_at": "2023-08-08T07:02:59.672Z",\n                          "refund": false\n                      },\n                      {\n                          "transaction_status": "SUCCESS",\n                          "transaction_reference": "Aq1111BddCDqdddqdqqEw4",\n                          "created_at": "2023-08-08T07:02:54.052Z",\n                          "refund": null\n                      },\n                      {\n                          "transaction_status": "MISMATCH",\n                          "transaction_reference": "Aq1111BddCDqdddqdqqEw4",\n                          "created_at": "2023-08-08T07:02:29.392Z",\n                          "refund": false\n                      }\n                  ]\n              }\n  }'},{status:"401:Unauthorized",responseMsg:"No Authorization",pill:r.O?.orangeColor,code:'{\n              "success": false,\n              "message": "",\n              "data": {}\n  }'},{status:"403:Forbidden",responseMsg:"Wrong/Invalid API Keys",pill:r.O?.greenColor,code:'{\n              "success": false,\n              "message": "Merchant authentication failed",\n              "data": {}\n  }'}],p=[{title:"Body",children:[{key:"transaction_reference",dataType:"String",description:"The transaction ref of the already initiated transaction.",required:!0},{key:"amount",dataType:"Integer",description:"Amount is in Kobo",required:!1},{key:"duration",dataType:"Integer",description:"Amount of time before transaction expires. Duration is in seconds.",required:!1}]}],y=[{status:"200:OK",responseMsg:"Success",pill:r.O?.greenColor,code:'{\n              "status": 200,\n              "success": true,\n              "message": "Success",\n              "data": {\n                  "account_number": "0852491446",\n                  "currency": "NGN",\n                  "amount": 5000,\n                  "expires_at": "2023-08-30T17:01:46.973Z",\n                  "transaction_reference": "ify21"\n              }\n  }'},{status:"401:Unauthorized",responseMsg:"No Authorization",pill:r.O?.orangeColor,code:'{\n              "success": false,\n              "message": "",\n              "data": {}\n  }'},{status:"403:Forbidden",responseMsg:"Wrong/Invalid API Keys",pill:r.O?.greenColor,code:'{\n              "success": false,\n              "message": "Merchant authentication failed",\n              "data": {}\n  }'},{status:"404:Not Found",responseMsg:"Invalid Transaction Ref",pill:r.O?.greenColor,code:'{\n              "status": 404,\n              "success": false,\n              "message": "Transaction not found",\n              "data": {}\n  }'}],f=[{title:"Body",children:[{key:"virtual_account_number",dataType:"String",description:"10-digit Dynamic Account gotten after initiating a virtual transfer. ",required:!0},{key:"amount",dataType:"String",description:"Amount is in naira. This is the expected amount to be transferred into the dynamic virtual account.",required:!0},{key:"dva",dataType:"boolean",description:"true",required:!0}]}],g=[{status:"200:OK",responseMsg:"Success",pill:r.O?.greenColor,code:'{\n              "status": 200,\n              "success": true,\n              "message": "Success",\n              "data": "Payment successful"\n  }'},{status:"401:Unauthorized",responseMsg:"No Authorization",pill:r.O?.orangeColor,code:'{\n              "success": false,\n              "message": "",\n              "data": {}\n  }'},{status:"403:Forbidden",responseMsg:"Wrong/Invalid API Keys",pill:r.O?.greenColor,code:'{\n              "success": false,\n              "message": "Merchant authentication failed",\n              "data": {}\n  }'}];a(7294);const v={sidebar_position:4},x="Dynamic Virtual Account",b={id:"Virtual-accounts/dynamic-virtual-account-v2",title:"Dynamic Virtual Account",description:"This module contains APIs that allow you generate a pool of Virtual Accounts that can be assigned on a transaction basis. This means that you can set a timer for expiry, a transaction ref, determine the amount to be collected.",source:"@site/docs/Virtual-accounts/dynamic-virtual-account-v2.mdx",sourceDirName:"Virtual-accounts",slug:"/Virtual-accounts/dynamic-virtual-account-v2",permalink:"/Virtual-accounts/dynamic-virtual-account-v2",draft:!1,unlisted:!1,editUrl:"https://github.com/HabariPay/habaripay.github.io/tree/main/docs/Virtual-accounts/dynamic-virtual-account-v2.mdx",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Encryption & Decryption",permalink:"/Virtual-accounts/encryption-decryption"},next:{title:"Transfer API",permalink:"/Transfer-API/transfer-apis"}},j={},A=[{value:"Process Flow",id:"process-flow",level:3},{value:"API KEYS (Test Environment)",id:"api-keys-test-environment",level:3},{value:"Create Dynamic VA Accounts",id:"create-dynamic-va-accounts",level:3},{value:"Get Pool Count",id:"get-pool-count",level:3},{value:"Initiate Dynamic Virtual Account Transaction",id:"initiate-dynamic-virtual-account-transaction",level:3},{value:"Sample Request",id:"sample-request",level:4},{value:"Re-query Transaction",id:"re-query-transaction",level:3},{value:"Edit Amount/Duration",id:"edit-amountduration",level:3},{value:"Sample Request",id:"sample-request-1",level:4},{value:"Simulate Payment Endpoint",id:"simulate-payment-endpoint",level:3},{value:"WEBHOOKS",id:"webhooks",level:2},{value:"Sample Webhook Notification (Success)",id:"sample-webhook-notification-success",level:4},{value:"Sample Webhook Notification (Expired)",id:"sample-webhook-notification-expired",level:4},{value:"Sample Webhook Notification (Mismatch)",id:"sample-webhook-notification-mismatch",level:4},{value:"HASH SIGNATURE VALIDATION",id:"hash-signature-validation",level:2},{value:"Webhook Payload to be hashed",id:"webhook-payload-to-be-hashed",level:4},{value:"Webhook Error Log",id:"webhook-error-log",level:4},{value:"Sample Error Log Response for DVA",id:"sample-error-log-response-for-dva",level:4}];function q(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,s.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"dynamic-virtual-account",children:"Dynamic Virtual Account"}),"\n",(0,t.jsx)(n.p,{children:"This module contains APIs that allow you generate a pool of Virtual Accounts that can be assigned on a transaction basis. This means that you can set a timer for expiry, a transaction ref, determine the amount to be collected."}),"\n",(0,t.jsx)(n.p,{children:"Please note that all accounts created will now bear the merchant's business name and no longer SQUAD CHECKOUT as it used to be. The format will now be SQUAD_MERCHANT BUSINESS NAME. (Also note that this doesn't affect already created accounts in the pool)."}),"\n",(0,t.jsx)(n.p,{children:"After creating the pool of accounts, the system automatically assigns accounts from your pool on a transaction basis."}),"\n",(0,t.jsx)(n.p,{children:"It has various webhook notifications for mismatch, expired and successful transaction as we as a re-query endpoint to see all transactions that have been queued for refunds, and those that have been refunded."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Please note that to create dynamic virtual accounts for your pools, your KYC account needs to be a GTB account number and is mapped to the BVN provided."})}),"\n",(0,t.jsx)(n.h3,{id:"process-flow",children:"Process Flow"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["All accounts must be profiled before you can use this service as it is a restricted service for selected business. Kindly send a mail to ",(0,t.jsx)(n.a,{href:"mailto:help@squadco.com",children:"help@squadco.com"})," or ",(0,t.jsx)(n.a,{href:"mailto:growth@habaripay.com",children:"growth@habaripay.com"})," requesting permission to use this service."]}),"\n",(0,t.jsx)(n.li,{children:"Each merchant is assigned a separate pool of accounts and as such they are expected to create their accounts based on their use case and expected transaction volume."}),"\n",(0,t.jsx)(n.li,{children:"To initiate a transaction, the merchant is to call the generate Dynamic virtual account endpoint and an account from your own pool will be made available for transaction and will be tied to the amount and duration you set."}),"\n",(0,t.jsx)(n.li,{children:"Webhook notification is fired for 3 events: success, expired and mismatch."}),"\n",(0,t.jsx)(n.li,{children:"There is a re-query that shows all payment attempts for a single transaction reference. It returns an array which contains the payment attempts and you can see the various status of either success, expired or mismatch where applicable."}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"api-keys-test-environment",children:"API KEYS (Test Environment)"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"Create an account on our sandbox environment: sandbox.squadco.com"}),"\n",(0,t.jsx)(n.li,{children:"Share the merchant ID with the Technical Account Managers for Profiling."}),"\n",(0,t.jsx)(n.li,{children:"Retrieve Authorization keys from the bottom of the Get Started Page."}),"\n"]}),"\n",(0,t.jsx)(n.admonition,{title:"Authorization",type:"caution",children:(0,t.jsxs)(n.p,{children:["Any request made without the authorization key (secret key) will fail with a ",(0,t.jsx)(n.strong,{children:"401"})," (Unauthorized) response code."]})}),"\n",(0,t.jsx)(n.admonition,{type:"info",children:(0,t.jsx)(n.p,{children:"The authorization key is sent via the request header as Bearer Token Authorization"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example:"})}),"\n",(0,t.jsx)(n.p,{children:"Authorization: Bearer sandbox_sk_94f2b798466408ef4d19e848ee1a4d1a3e93f104046f\n\u200b"}),"\n",(0,t.jsx)(n.h3,{id:"create-dynamic-va-accounts",children:"Create Dynamic VA Accounts"}),"\n",(0,t.jsx)(n.p,{children:"This allows you create and assign dynamic virtual accounts to your pool. Only one account is generated per request."}),"\n",(0,t.jsx)(i.Z,{endpoint:"https://sandbox-api-d.squadco.com/virtual-account/create-dynamic-virtual-account",method:"POST",header:"This allows you create and assign dynamic virtual accounts to your pool"}),"\n",(0,t.jsx)(o.C,{items:c}),"\n",(0,t.jsx)(n.h3,{id:"get-pool-count",children:"Get Pool Count"}),"\n",(0,t.jsx)(n.p,{children:"This API gives you the total count of the virtual accounts you have in your pool."}),"\n",(0,t.jsx)(i.Z,{endpoint:"https://sandbox-api-d.squadco.com/virtual-account/count-dynamic-virtual-accounts",method:"GET",header:"This API gives you the total count of the virtual accounts you have in your pool"}),"\n",(0,t.jsx)(o.C,{items:d}),"\n",(0,t.jsx)(n.h3,{id:"initiate-dynamic-virtual-account-transaction",children:"Initiate Dynamic Virtual Account Transaction"}),"\n",(0,t.jsx)(n.p,{children:"This API allows you generate a Dynamic Virtual Account to be assigned to a customer. This is used to initiate a transaction."}),"\n",(0,t.jsx)(i.Z,{items:l,parameters:!0,endpoint:"https://sandbox-api-d.squadco.com/virtual-account/initiate-dynamic-virtual-account",method:"POST",header:"This API allows you generate a Dynamic Virtual Account to be assigned to a customer",summary:"This API allows you generate a Dynamic Virtual Account to be assigned to a customer. This is used to initiate a transaction."}),"\n",(0,t.jsx)(o.C,{items:u}),"\n",(0,t.jsx)(n.h4,{id:"sample-request",children:"Sample Request"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'{\n    "amount":100,\n    "transaction_ref":"Aq1111BddCDqdddqdqqEw2",\n    "duration":600,\n    "email":"hittommyi02@gmail.com"\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"re-query-transaction",children:"Re-query Transaction"}),"\n",(0,t.jsx)(n.p,{children:"This API allows you re-query a transaction to see its status. It returns an array of all transaction attempts made including those that returned as a mismatch, those that expired and the successful transaction. Ultimately all expired and mismatched transactions will eventually be refunded."}),"\n",(0,t.jsx)(i.Z,{items:h,parameters:!0,endpoint:"https://sandbox-api-d.squadco.com/virtual-account/get-dynamic-virtual-account-transactions/:transaction_reference",method:"GET",header:"This API allows you re-query a transaction to see it's status.",summary:"This API allows you re-query a transaction to see its status. It returns an array of all transaction attempts made including those that returned as a mismatch, those that expired and the successful transaction. Ultimately all expired and mismatched transactions will eventually be refunded."}),"\n",(0,t.jsx)(o.C,{items:m}),"\n",(0,t.jsx)(n.h3,{id:"edit-amountduration",children:"Edit Amount/Duration"}),"\n",(0,t.jsx)(n.p,{children:"This API allows you to edit the amount/duration of a dynamic transaction that has already been initiated.\nIt takes the transction reference, the amount and duration."}),"\n",(0,t.jsx)(n.h4,{id:"sample-request-1",children:"Sample Request"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'{\n    "transaction_reference": "ify21",\n    "amount": 5000\n}\n'})}),"\n",(0,t.jsx)(i.Z,{items:p,parameters:!0,endpoint:"https://sandbox-api-d.squadco.com/virtual-account/update-dynamic-virtual-account-time-and-amount",method:"PATCH",header:"This API allows you to edit the amount/duration of a dynamic transaction"}),"\n",(0,t.jsx)(o.C,{items:y}),"\n",(0,t.jsx)(n.h3,{id:"simulate-payment-endpoint",children:"Simulate Payment Endpoint"}),"\n",(0,t.jsx)(n.p,{children:"This API allows you push test transactions. Please note that this APi is to be used only on the sandbox environment."}),"\n",(0,t.jsx)(i.Z,{items:f,parameters:!0,endpoint:"https://sandbox-api-d.squadco.com/virtual-account/simulate/payment",method:"POST",header:"This is to be used only on the sandbox environment to do test transactions. "}),"\n",(0,t.jsx)(o.C,{items:g}),"\n",(0,t.jsx)(n.h2,{id:"webhooks",children:"WEBHOOKS"}),"\n",(0,t.jsx)(n.p,{children:"Webhook Notification is sent for 3 different events/ status"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"Success: first transfer/transaction that is equal to the expected/specified amount and within the set duration."}),"\n",(0,t.jsx)(n.li,{children:"Mismatch: A transfer that happens within the specified duration but expected amount is not equal to the transfered amount."}),"\n",(0,t.jsx)(n.li,{children:"Expired: Transaction that happens after the set duration or after a successful transaction has been recorded, it doesn't matter if the transferred amount is equivalent to the expected amount."}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"To set your webhook, kindly visit your squad dashboard and go to the merchant setting page you will see a field labelled webhook URL. Only accounts with a valid webhook URL will receive notification."})}),"\n",(0,t.jsx)(n.h4,{id:"sample-webhook-notification-success",children:"Sample Webhook Notification (Success)"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'{\n  "transaction_status": "SUCCESS",\n  "merchant_reference": "Aq1111BddCDqdddqdqqEw4",\n  "merchant_amount": "100.00",\n  "amount_received": "100.00",\n  "transaction_reference": "REFFX8U72GD6/1691478173792",\n  "email": "igwehifeanyi02@gmail.com",\n  "merchant_id": "SBN1EBZEQ8",\n  "transaction_type": "dynamic_virtual_account",\n  "date": "2023-08-08T07:02:54.052Z"\n}\n'})}),"\n",(0,t.jsx)(n.h4,{id:"sample-webhook-notification-expired",children:"Sample Webhook Notification (Expired)"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'{\n  "transaction_status": "EXPIRED",\n  "merchant_reference": "Aq1111BddCDqdddqdqqEw4",\n  "merchant_amount": "100.00",\n  "amount_received": "100.00",\n  "transaction_reference": "REFKGXAMXEDR/1691478179452",\n  "email": "igwehifeanyi02@gmail.com",\n  "merchant_id": "SBN1EBZEQ8",\n  "transaction_type": "dynamic_virtual_account",\n  "date": "2023-08-08T07:02:59.672Z"\n}\n'})}),"\n",(0,t.jsx)(n.h4,{id:"sample-webhook-notification-mismatch",children:"Sample Webhook Notification (Mismatch)"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'{\n  "transaction_status": "MISMATCH",\n  "merchant_reference": "Aq1111BddCDqdddqdqqEw4",\n  "merchant_amount": "100.00",\n  "amount_received": "101.00",\n  "transaction_reference": "REFRQR681DB8/1691478149192",\n  "email": "igwehifeanyi02@gmail.com",\n  "merchant_id": "SBN1EBZEQ8",\n  "transaction_type": "dynamic_virtual_account",\n  "date": "2023-08-08T07:02:29.392Z"\n}\n'})}),"\n",(0,t.jsx)(n.h2,{id:"hash-signature-validation",children:"HASH SIGNATURE VALIDATION"}),"\n",(0,t.jsx)(n.p,{children:"Every webhook request comes with a hash signature on the request header. You are expected as a form of security to create a hash and compare to the hash sent via the header.\nThe hash is a sha512 hash of some parameters in the payload using your squad secret/private key."}),"\n",(0,t.jsxs)(n.p,{children:["The signature in the header has the key: ",(0,t.jsx)(n.strong,{children:"x-squad-encrypted-body"})," .\nThe parameters to be hashed are seen below:"]}),"\n",(0,t.jsx)(n.h4,{id:"webhook-payload-to-be-hashed",children:"Webhook Payload to be hashed"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'{\n transaction_reference: "REF202308010384993",\n amount_received: "3000",\n merchant_reference: "test_1",\n}\n'})}),"\n",(0,t.jsx)(n.h4,{id:"webhook-error-log",children:"Webhook Error Log"}),"\n",(0,t.jsxs)(n.p,{children:["This contains all missed webhook notifications that we didn't get a 200 response for. The aim of this is to mitigate against missed webhooks.\n",(0,t.jsx)(n.a,{href:"https://squadinc.gitbook.io/virtual-accounts/reference/api-specifications#delete-webhook-error-log",children:"Click to open API specifications"})]}),"\n",(0,t.jsx)(n.h4,{id:"sample-error-log-response-for-dva",children:"Sample Error Log Response for DVA"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'{\n    "status": 200,\n    "success": true,\n    "message": "Success",\n    "data": {\n        "count": 2,\n        "rows": [\n            {\n                "id": "2dc56eb3-d997-4e68-adf9-53b603c16a43",\n                "payload": {\n                    "date": "2023-08-09T15:09:54.958Z",\n                    "email": "igwehifeanyi02@gmail.com",\n                    "merchant_id": "SBN1EBZEQ8",\n                    "amount_received": "100.00",\n                    "merchant_amount": "100.00",\n                    "transaction_type": "dynamic_virtual_account",\n                    "merchant_reference": "C2",\n                    "transaction_status": "SUCCESS",\n                    "transaction_reference": "REF7VDV8JV25/1691593794798"\n                },\n                "transaction_ref": "REF7VDV8JV25/1691593794798"\n            },\n            {\n                "id": "b7983af4-ad3e-40ef-91d4-55af04bb2173",\n                "payload": {\n                    "date": "2023-08-09T15:04:41.017Z",\n                    "email": "igwehifeanyi02@gmail.com",\n                    "merchant_id": "SBN1EBZEQ8",\n                    "amount_received": "100.00",\n                    "merchant_amount": "100.00",\n                    "transaction_type": "dynamic_virtual_account",\n                    "merchant_reference": "Cw2",\n                    "transaction_status": "SUCCESS",\n                    "transaction_reference": "REFANGDGNQ1N/1691593480709"\n                },\n                "transaction_ref": "REFANGDGNQ1N/1691593480709"\n            }\n        ]\n    }\n}\n'})})]})}function _(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(q,{...e})}):q(e)}}}]);