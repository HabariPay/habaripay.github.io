"use strict";(self.webpackChunkhabari_docs=self.webpackChunkhabari_docs||[]).push([[518],{4105:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>l,frontMatter:()=>r,metadata:()=>o,toc:()=>d});var a=t(5893),i=t(1151);const r={sidebar_position:2},s="Signature validation",o={id:"webhook-direct-url/signature-validation",title:"Signature validation",description:"The webhook notification sent carry the x-squad-encrypted-body in the header. The hash value (x-squad-encrypted-body) is an HMAC SHA512 signature of the event payload signed using your secret key.",source:"@site/docs/webhook-direct-url/signature-validation.mdx",sourceDirName:"webhook-direct-url",slug:"/webhook-direct-url/signature-validation",permalink:"/webhook-direct-url/signature-validation",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/webhook-direct-url/signature-validation.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Webhook & Redirect URL",permalink:"/webhook-direct-url/webhook-and-direct-url"},next:{title:"Virtual Accounts",permalink:"/Virtual-accounts/virtual-account"}},c={},d=[{value:"The webhook notification sent carry the x-squad-encrypted-body in the header. The hash value (x-squad-encrypted-body) is an HMAC SHA512 signature of the event payload signed using your secret key.",id:"the-webhook-notification-sent-carry-the-x-squad-encrypted-body-in-the-header-the-hash-value-x-squad-encrypted-body-is-an-hmac-sha512-signature-of-the-event-payload-signed-using-your-secret-key",level:5},{value:"Sample Function (C#)",id:"sample-function-c",level:3},{value:"Sample Function (node)",id:"sample-function-node",level:3},{value:"Sample Function (PHP)",id:"sample-function-php",level:3},{value:"Sample Function (JAVA)",id:"sample-function-java",level:3}];function u(e){const n={code:"code",h1:"h1",h3:"h3",h5:"h5",pre:"pre",...(0,i.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h1,{id:"signature-validation",children:"Signature validation"}),"\n",(0,a.jsx)(n.h5,{id:"the-webhook-notification-sent-carry-the-x-squad-encrypted-body-in-the-header-the-hash-value-x-squad-encrypted-body-is-an-hmac-sha512-signature-of-the-event-payload-signed-using-your-secret-key",children:"The webhook notification sent carry the x-squad-encrypted-body in the header. The hash value (x-squad-encrypted-body) is an HMAC SHA512 signature of the event payload signed using your secret key."}),"\n",(0,a.jsx)(n.h3,{id:"sample-function-c",children:"Sample Function (C#)"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-c",children:'using System;\nusing System.Text;\nusing System.Security.Cryptography;\nusing Newtonsoft.Json;\n\npublic class Program\n{\n  public static void Main()\n  {\n\t var chargeResponse = new VirtualAccount_VM()\n\t {\n\t\t transaction_reference = "REFE52ARZHTS/1668421222619_1",\n\t\t virtual_account_number = "2129125316",\n\t\t principal_amount = "222.00",\n\t\t settled_amount = "221.78",\n\t\t fee_charged = "0.22",\n\t\t transaction_date = "2022-11-14T10:20:22.619Z",\n\t\t customer_identifier = "SBN1EBZEQ8",\n\t\t transaction_indicator = "C",\n\t\t remarks =  "Transfer FROM sandbox sandbox | [SBN1EBZEQ8] TO sandbox sandbox",\n\t\t currency = "NGN",\n\t\t channel =  "virtual-account",\n\t\t meta =  new MetaBody_VM()\n\t\t {\n\t\t freeze_transaction_ref =  null,\n\t\t reason_for_frozen_transaction =  null\n\t\t },\n\t\t encrypted_body = "ViASuHLhO+SP3KtmcdAOis+3Obg54d5SgCFPFMcguYfkkYs/i44jeT5Dbx52TcOvHRp9HlnCoFwbATkEihzv2C8UyPoC38sRb90S5Z9Fq7vRwjDQz/hYi/nKbWA0btPr3A+UXhX1Nu5ek+TL0ENUC8W1ZX/FrowX3HQaYiwe3tU/Kfr2XvAGwT7IAx5CQBhpzL34faHP4jbwSVmSgVYmW5rd2ClWQ7WWJjDMakrqYJva8qd0vhkqSpyz2KywOV9t9zSHRx3VpbvlDsBdkNGr+4Axh/7Gspu3xo9mMOIdv73OzjN4VA/qQP+fQMCjU1pbS8oh81HjwkHjzC5SBhzR8IU8bsmvFUyzJMfDoJuUB+fs09SLW7pdfODwK5vB8LtdKPnAuTPlv5dHVAPeMG/ubtl/HOqCZs4axjuO557srw0GpKk86bwaVKt4IQ17nY/QCJFC273HWU1CawP7d3nQasRZf/TU7ra+fOjQBHQ7Gtz2Pnfp3gLljBKenMT4Cabks1X2/6ZQpd/yGFkloYdS7ZW3kEvrorjcyma4WNDmJfhcdR9XGsom6Y/M/n/gMMa0z2KPbHDRoEBeRYbQHcnu5LnGWzBA4Y4RMSTDesD876PDB1bOnMzNPrWYam6ZVRHz"\n\t\t };\n\n\t\t String SerializedPayload = JsonConvert.SerializeObject(chargeResponse);\n\t\t Console.WriteLine(SerializedPayload);\n                 string result = "";\n                 var secretKeyBytes = Encoding.UTF8.GetBytes("sandbox_sk_9ac9418e847972dd45f5fe845b5716ef305589808eda");\n                 var inputBytes = Encoding.UTF8.GetBytes(SerializedPayload);\n                 var hmac = new HMACSHA512(secretKeyBytes);\n                 byte[] hashValue = hmac.ComputeHash(inputBytes);\n                 result = BitConverter.ToString(hashValue).Replace("-", string.Empty);\n                 Console.WriteLine(result);\n\n                 Console.WriteLine(result.ToLower() == "18b9eb6ca68f92ca9f058da7bce6545efb12660cf75f960e552cf6098bb5ee8e71f20331dcfe0dfaea07439cc6629f901850291a39f374a1bd076c4eff1026c8");\n\t}\n}\n\npublic class VirtualAccount_VM\n{\n  public string transaction_reference { get; set; }\n  public string virtual_account_number { get; set; }\n  public string principal_amount { get; set; }\n  public string settled_amount { get; set; }\n  public string fee_charged { get; set; }\n  public string transaction_date { get; set; }\n  public string customer_identifier { get; set; }\n  public string transaction_indicator { get; set; }\n  public string remarks { get; set; }\n  public string currency { get; set; }\n  public string channel { get; set; }\n  public MetaBody_VM meta { get; set; }\n  public string encrypted_body { get; set; }\n}\npublic class MetaBody_VM\n    {\n        public string freeze_transaction_ref { get; set; }\n        public string reason_for_frozen_transaction { get; set; }\n    }\n'})}),"\n",(0,a.jsx)(n.h3,{id:"sample-function-node",children:"Sample Function (node)"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-js",children:'const crypto = require("crypto");\nconst secret = "Your Squad Secret Key";\n// Using Express\napp.post("/MY-WEBHOOK-URL", function (req, res) {\n  //validate event\n  const hash = crypto\n    .createHmac("sha512", secret)\n    .update(JSON.stringify(body))\n    .digest("hex")\n    .toUpperCase();\n  if (hash == req.headers["x-squad-encrypted-body"]) {\n    // you can trust the event came from squad and so you can give value to customer\n  } else {\n    // this request didn\'t come from Squad, ignore it\n  }\n  res.send(200);\n});\n'})}),"\n",(0,a.jsx)(n.h3,{id:"sample-function-php",children:"Sample Function (PHP)"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-php",children:"<?php\n\u200b\nif ((strtoupper($_SERVER['REQUEST_METHOD']) != 'POST' ) || !array_key_exists('x-squad-encrypted-body', $_SERVER) )\n    exit();\n// Retrieve the request's body\n$input = @file_get_contents(\"php://input\");\ndefine('SQUAD_SECRET_KEY','YOUR_SECRET_KEY'); //ENTER YOUR SECRET KEY HERE\n// validate event do all at once to avoid timing attack\nif($_SERVER['x-squad-encrypted-body'] !== strtoupper(hash_hmac('sha512', $input, SQUAD_SECRET_KEY)))\n// The Webhook request is not from SQUAD\n    exit();\nhttp_response_code(200);\n// The Webhook request is from SQUAD\n$body = json_decode($input);\nexit();\n?>\n"})}),"\n",(0,a.jsx)(n.h3,{id:"sample-function-java",children:"Sample Function (JAVA)"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-java",children:'package hmacexample;\nimport java.io.UnsupportedEncodingException;\nimport java.math.BigInteger;\nimport java.security.InvalidKeyException;\nimport java.security.NoSuchAlgorithmException;\nimport javax.crypto.Mac;\nimport javax.crypto.spec.SecretKeySpec;\nimport org.json.JSONException;\nimport org.json.JSONObject;\npublic class HMacExample {\n  public static void main(String[] args) throws UnsupportedEncodingException, InvalidKeyException, NoSuchAlgorithmException, JSONException {\n    //This verifies that the request is from Squad\n\n    String key = "YOUR_SECRET_KEY"; //replace with your squad secret_key\n\n    String body = "BODY_OF_THE_WEBHOOK_PAYLOAD"; //Replace with body of the webhook payload\n\n    String result = "";\n    String HMAC_SHA512 = "HmacSHA512";\n    String x-squad-encrypted-body = ""; //put in the request\'s header value for x-squad-encrypted-body\n\n    byte [] byteKey = key.getBytes("UTF-8");\n    SecretKeySpec keySpec = new SecretKeySpec(byteKey, HMAC_SHA512);\n    Mac sha512_HMAC = Mac.getInstance(HMAC_SHA512);\n    sha512_HMAC.init(keySpec);\n    byte [] mac_data = sha512_HMAC.\n    doFinal(body.toString().getBytes("UTF-8"));\n    result = String.format("%040x", new BigInteger(1, mac_data));\n    while (result.length() < 128)  result = "0"+ result;\n    if(result.toUpperCase().equals(x-squad-encrypted-body)) {\n      // you can trust that this is from squad\n    }else{\n      // this isn\'t from Squad, ignore it\n    }\n  }\n}\n'})})]})}function l(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(u,{...e})}):u(e)}}}]);