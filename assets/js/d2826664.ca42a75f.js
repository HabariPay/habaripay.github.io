"use strict";(self.webpackChunkhabari_docs=self.webpackChunkhabari_docs||[]).push([[877],{7436:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>_,contentTitle:()=>y,default:()=>b,frontMatter:()=>m,metadata:()=>g,toc:()=>h});var a=t(5893),r=t(1151),s=t(7294),i=t(508),o=t(9286);const c=e=>{let{data:n}=e;const[t,r]=(0,s.useState)(!1),i=t?"open":"",c=t?"rotate-90":"";return(0,a.jsxs)(l,{className:`${i} dark:border-b-[#303337] cursor-pointer`,children:[(0,a.jsxs)("div",{className:"flex justify-between items-center h-12",onClick:()=>{r((e=>!e))},children:[(0,a.jsx)("p",{className:"mb-0 pb-0",children:n?.language}),(0,a.jsx)("svg",{xmlns:"http://www.w3.org/2000/svg",height:"1em",viewBox:"0 0 320 512",className:`${c} transition-all justify-self-end dark:fill-white`,children:(0,a.jsx)("path",{d:"M278.6 233.4c12.5 12.5 12.5 32.8 0 45.3l-160 160c-12.5 12.5-32.8 12.5-45.3 0s-12.5-32.8 0-45.3L210.7 256 73.4 118.6c-12.5-12.5-12.5-32.8 0-45.3s32.8-12.5 45.3 0l160 160z"})})]}),(0,a.jsx)("div",{className:"accordion-details",children:(0,a.jsxs)("div",{className:"content",children:[(0,a.jsx)("h4",{children:n?.headerOne}),(0,a.jsx)(o.Z,{className:"language-jsx my-5",children:n?.codeOne}),(0,a.jsx)("h4",{className:"pt-6",children:n?.headerTwo}),(0,a.jsx)(o.Z,{className:"language-jsx my-5 pb-5",children:n?.codeTwo})]})})]})};function d(e){let{items:n}=e;return(0,a.jsx)(u,{className:" dark:border-[#303337]",children:(0,a.jsx)("div",{className:"",children:n?.map((e=>(0,a.jsx)(c,{data:e},e.key)))})})}const u=i.ZP.div`
  border: 2px solid #EBEBF2;
  border-radius: 8px;
  padding-inline: 35px;
  padding-block: 8px;
  margin-top: 1.5rem;

  :last-child {
    border-bottom: none;
    margin-bottom: 0px;
    padding-bottom: 0px;
  }

  @media only screen and (max-width: 600px) {
    padding-inline: 15px;
  }
`,l=i.ZP.div`
  margin-bottom: 10px;
  border-bottom: 1px solid #f7f7f7;
  /* padding-bottom: 10px; */
  

  .accordion-details {
    display: grid;
    grid-template-rows: 0fr;
    transition: all 0.4s ease-out;

    .content {
      overflow: hidden;
    }
  }

  &.open {
    .accordion-details {
      grid-template-rows: 1fr;
    }
  }

`;var p=t(5812);const m={sidebar_position:3},y="Encryption & Decryption",g={id:"Virtual-accounts/encryption-decryption",title:"Encryption & Decryption",description:"Encryption and Decryption function for decrypting merchant transaction",source:"@site/docs/Virtual-accounts/encryption-decryption.mdx",sourceDirName:"Virtual-accounts",slug:"/Virtual-accounts/encryption-decryption",permalink:"/squad-docs/Virtual-accounts/encryption-decryption",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Virtual-accounts/encryption-decryption.mdx",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"API Specifications",permalink:"/squad-docs/Virtual-accounts/api-specifications"},next:{title:"Dynamic Virtual Account",permalink:"/squad-docs/Virtual-accounts/dynamic-virtual-account-v2"}},_={},h=[];function f(e){const n={h1:"h1",p:"p",...(0,r.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h1,{id:"encryption--decryption",children:"Encryption & Decryption"}),"\n",(0,a.jsx)(n.p,{children:"Encryption and Decryption function for decrypting merchant transaction"}),"\n",(0,a.jsx)(d,{items:p.GP}),"\n",(0,a.jsx)(d,{items:p.E$}),"\n",(0,a.jsx)(d,{items:p.H2}),"\n",(0,a.jsx)(d,{items:p.wB})]})}function b(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(f,{...e})}):f(e)}},5812:(e,n,t)=>{t.d(n,{A9:()=>k,By:()=>K,DK:()=>s,E$:()=>q,E0:()=>x,Ex:()=>E,F7:()=>P,GP:()=>N,H2:()=>v,Hp:()=>d,Ke:()=>l,Kw:()=>I,ND:()=>Z,PF:()=>m,Qq:()=>b,SQ:()=>S,Sr:()=>i,Tv:()=>z,VU:()=>D,Xk:()=>_,a:()=>O,bs:()=>h,cc:()=>w,eT:()=>A,kD:()=>y,le:()=>o,nB:()=>C,oO:()=>g,pk:()=>u,qR:()=>p,sR:()=>r,t$:()=>T,tp:()=>f,wB:()=>M,wo:()=>c});var a=t(8830);const r=[{title:"Body",children:[{key:"first_name",dataType:"String",description:"customer first name",required:!0},{key:"last_name",dataType:"String",description:"customer last name",required:!0},{key:"middle_name",dataType:"String",description:"customer middle name",required:!1},{key:"mobile_num",dataType:"String",description:"08012345678 (doesn't take more than 11 digits)",required:!0},{key:"dob",dataType:"Date",description:"dd/mm/yyyy",required:!0},{key:"email",dataType:"String",description:"customer email",required:!1},{key:"bvn",dataType:"String",description:"BVN is compulsory",required:!0},{key:"gender",dataType:"String",description:"'1' - Male, '2' -Female",required:!0},{key:"address",dataType:"String",description:"customer address",required:!0},{key:"customer_identifier",dataType:"String",description:"unique customer identifier as given by merchant",required:!0},{key:"beneficiary_account",dataType:"String",description:"Beneficiary Account is the 10 Digit Bank Account Number (GTBank) provided by the Merchant where money sent to this Virtual account is paid into. Please note that when beneficiary account is not provided, money paid into this virtual account go into your wallet and will be paid out/settled in T+1 settlement time.",required:!1}]}],s=[{status:"200:OK",responseMsg:"Success Response",pill:a.O?.greenColor,code:'{\n            "customer_identifier": "CCC",\n            "first_name": "Techzilla- Joesph",\n            "last_name": "Okoye",\n            "mobile_num": "08139011943",\n            "email": "ayo@gmail.com",\n            "bvn": "12343211654",\n            "dob": "30/10/1990",\n            "address": "22 Kota street, UK",\n            "gender": "1",\n            "beneficiary_account":\xa0"4920299492"\n}'},{status:"401:Unauthorized",responseMsg:"No Authorization",pill:a.O?.orangeColor,code:'{\n            "success": false,\n            "message": "",\n            "data": {}\n}'},{status:"403:Forbidden",responseMsg:"Invalid/Wrong API keys",pill:a.O?.orangeColor,code:'{\n            "success": false,\n            "message": "Merchant authentication failed",\n            "data": {}\n}'}],i=[{title:"Body",children:[{key:"bvn",dataType:"String",description:"Bank Verification Number",required:!0},{key:"business_name",dataType:"String",description:"Name of Business/Customer",required:!0},{key:"customer_identifier",dataType:"String",description:"An alphanumeric string used to identify a customer/business in your system which will be tied to the virtual account being created",required:!0},{key:"mobile_num",dataType:"String",description:"Customer's Phone Number Sample: 08012345678 (doesn't take more than 11 digits)",required:!0},{key:"beneficiary_account",dataType:"Date",description:"Beneficiary Account is your 10 Digit Bank Account Number (GTBank) where money sent to this Virtual account is paid into. Please note that when beneficiary account is not provided, money paid into this virtual account go into your wallet and will be paid out/settled in T+1 settlement time.",required:!1}]}],o=[{status:"200:OK",responseMsg:"Success",pill:a.O?.greenColor,code:'{\n            "status": 200,\n            "success": true,\n            "message": "Success",\n            "data": {\n                "first_name": "Techzilla-Will",\n                "last_name": "Okoye",\n                "bank_code": "058",\n                "virtual_account_number": "2474681469",\n                "beneficiary_account": null,\n                "customer_identifier": "Tech910260",\n                "created_at": "2023-08-07T13:18:21.287Z",\n                "updated_at": "2023-08-07T13:18:21.287Z"\n            }\n}'},{status:"400:Bad Request",responseMsg:"Bad Request",pill:a.O?.orangeColor,code:'{\n            "status": 400,\n            "success": false,\n            "message": ""customer_identifier" is required",\n            "data": {}\n}'},{status:"401:Unauthorized",responseMsg:"No API key",pill:a.O?.orangeColor,code:'{\n            "success": false,\n            "message": "",\n            "data": {}\n}'},{status:"403:Forbidden",responseMsg:"Invalid Authorization key or token",pill:a.O?.orangeColor,code:'{\n            "success": false,\n            "message": "Merchant authentication failed",\n            "data": {}\n}'}],c=[{title:"Query",children:[{key:"page",dataType:"Integer",description:"The page you are on",required:!1},{key:"perPage",dataType:"Integer",description:"Number of records you want to appear on a page",required:!1}]}],d=[{status:"200:OK",responseMsg:"Response description",pill:a.O?.greenColor,code:'{\n            "status": 200,\n            "success": true,\n            "message": "Success",\n            "data": {\n                "count": 2,\n                "rows": [\n                    {\n                        "id": "229f9f3d-53e4-450e-a9e9-164a8b882a60",\n                        "payload": {\n                            "hash": "659c24ba0b6c3ac324b587f2f079c8ee876c56609ff11b7106cd868f84674a5c37fcb088373859f8d900713f03c47d819de79623cde67e70bbca945fd20f3cb3",\n                            "meta": {\n                                "freeze_transaction_ref": null,\n                                "reason_for_frozen_transaction": null\n                            },\n                            "channel": "virtual-account",\n                            "remarks": "Transfer FROM OKOYE, CHIZOBA ANTHONY | [CCtyttytC] TO CHIZOBA ANTHONY OKOYE",\n                            "currency": "NGN",\n                            "fee_charged": "0.05",\n                            "sender_name": "OKOYE, CHIZOBA ANTHONY",\n                            "encrypted_body": "DiPEa8Z4Cbfiqulhs3Q8lVJXGjMIFzbWwI2g7utVGbhXihbtK3H2xsA/+ZnjOpFA0AU8vAN5LUTEH6elfrK58ub2wydaRk0ngvQXWUFz3iB19qWBcdGQRnppKAT/AB5xyy1iQZvEHP7zq3Y7na5zcx9ttkU1mZIeAIoisM9k+ghVLxkTeql4UvfFcLyDdGzMd/BC4YgJFyrZxifhfhKi073od7xJnz4Hhz08UBE/FAwNYMWkwWD9izlbcaaJtfh1VIN6t9rl1gotlb5qmNq/UytgoSvuN5uaEXxegdB3VWvmsDMHqoYwDs4oEuv0lp8zUUG3cZ9zPQ6xH3shGQjVOWErkuIfCk62fRzkwxya4Gu/x2KHMSQjutbvD4vNDjVGfuCIoHuZEXPThWrq1jpTy7cNMLc8ZZ8IowJnfwWHL+O6fuepxXxfrJHlswMCI35ZHSvef1AEXgbUlx2O7yzytceCogpUkY+QJ1yLddl1FeE1u2JKOM+casP3pfiT+t3Mv55aSCVQO7hUy46gd6H/bIHaSIp2K3CcjfdflZ/bxCZaZoe/sRqfVdVIzpSpTc0Lq5sOXM2gijOdeg+zex/CgnMIKGJdzUT9YUJtaaVrMmhk0EcM0rHRrqs0iM7xaSTdZ7K8hnzl0RPJhDXIhu5a/Y2NxS3ZTC2lYRVZd6I3lerpoMQG69VfmqvaVgW2k03f",\n                            "settled_amount": "49.95",\n                            "principal_amount": "50.00",\n                            "transaction_date": "2023-09-01T00:00:00.000Z",\n                            "customer_identifier": "CCtyttytC",\n                            "transaction_indicator": "C",\n                            "transaction_reference": "REF20230901162737156459_1",\n                            "virtual_account_number": "0760640237"\n                        },\n                        "transaction_ref": "REF20230901162737156459_1"\n                    }\n                ]\n            }\n}'},{status:"401:Unauthorized",responseMsg:"No Authorization",pill:a.O?.orangeColor,code:'{\n            "success": false,\n            "message": "",\n            "data": {}\n}'}],u=[{title:"Path",children:[{key:"transaction_ref",dataType:"String",description:"Unique Transaction Ref that identifies each virtual account and gotten from the retrieved webhook error log",required:!0}]}],l=[{status:"200:OK",responseMsg:"Success",pill:a.O?.greenColor,code:'{\n            "status": 200,\n            "success": true,\n            "message": "Success",\n            "data": 1\n}'},{status:"401:Unauthorized",responseMsg:"No Authorization",pill:a.O?.orangeColor,code:'{\n            "success": false,\n            "message": "",\n            "data": {}\n}'},{status:"403:Forbidden",responseMsg:"Wrong/Invalid API Keys",pill:a.O?.orangeColor,code:'{\n            "success": false,\n            "message": "Merchant authentication failed",\n            "data": {}\n}'}],p=[{title:"Path",children:[{key:"customer_identifier",dataType:"String",description:"Unique Customer Identifier that identifies each virtual account",required:!1}]}],m=[{title:"No Parameters"}],y=[{title:"Query",children:[{key:"page",dataType:"Integer",description:"Page Number to Display",required:!1},{key:"perPage",dataType:"Integer",description:"Number of records per Page",required:!1},{key:"virtualAccount",dataType:"Integer",description:"a unique 10-digit virtual account number",required:!1},{key:"customerIdentifier",dataType:"String",description:"Unique Identifier used to create/identify a customer's virtual account",required:!1},{key:"startDate",dataType:"Date",description:"MM-DD-YYYY E.G: 09-19-2022",required:!1},{key:"endDate",dataType:"Date",description:"MM-DD-YYYY E.G: 09-19-2022",required:!1},{key:"transactionReference",dataType:"String",description:"Unique Identifier of a transaction",required:!1},{key:"session_id",dataType:"String",description:"Unique ID that identifies all NIP transactions",required:!1},{key:"dir",dataType:"String",description:"Takes two possible values: 'DESC' and 'ASC'. 'DESC' - descending order ,'ASC' - ascending order",required:!1}]}],g=[{status:"200:OK",responseMsg:"Success",pill:a.O?.greenColor,code:'{\n    "status": 200,\n    "success": true,\n    "message": "Success",\n    "data": {\n        "count": 15,\n        "rows": [\n            {\n                "transaction_reference": "REF20221007130357_1",\n                "virtual_account_number": "0713810881",\n                "principal_amount": "50.00",\n                "settled_amount": "50.00",\n                "fee_charged": "0.00",\n                "transaction_date": "2022-10-07T00:00:00.000Z",\n                "transaction_indicator": "C",\n                "remarks": "Transfer FROM Sample | [CCC1234334] TO Sample Name",\n                "currency": "NGN",\n                "alerted_merchant": false,\n                "merchant_settlement_date": "2022-10-07T12:04:11.635Z",\n                "frozen_transaction": null,\n                "customer": {\n                    "customer_identifier": "CCC1234334"\n                }\n            },\n            {\n                "transaction_reference": "REF20221004191517_1",\n                "virtual_account_number": "0708729381",\n                "principal_amount": "50.00",\n                "settled_amount": "49.75",\n                "fee_charged": "0.25",\n                "transaction_date": "2022-10-04T00:00:00.000Z",\n                "transaction_indicator": "C",\n                "remarks": "Transfer FROM Sample Name4 | [OPPO] TO Sample Name",\n                "currency": "NGN",\n                "alerted_merchant": false,\n                "merchant_settlement_date": "2022-10-04T18:15:29.463Z",\n                "frozen_transaction": null,\n                "customer": {\n                    "customer_identifier": "OPPO"\n                }\n            },\n            {\n                "transaction_reference": "REF20220913181048_1",\n                "virtual_account_number": "0709108705",\n                "principal_amount": "50.00",\n                "settled_amount": "49.75",\n                "fee_charged": "0.25",\n                "transaction_date": "2022-09-13T18:10:48.000Z",\n                "transaction_indicator": "C",\n                "remarks": "Transfer FROM Sample Name4 | [TSP/00008786500] TO Sample Name",\n                "currency": "NGN",\n                "alerted_merchant": false,\n                "merchant_settlement_date": "2022-09-20T09:51:04.999Z",\n                "frozen_transaction": null,\n                "customer": {\n                    "customer_identifier": "TSP/00008786500"\n                }\n            },\n            {\n                "transaction_reference": "REF20220713143436_1",\n                "virtual_account_number": "0713694755",\n                "principal_amount": "50.00",\n                "settled_amount": "49.75",\n                "fee_charged": "0.25",\n                "transaction_date": "2022-07-13T14:34:36.000Z",\n                "transaction_indicator": "C",\n                "remarks": "Transfer from Sample Name | [123CCC] to Sample Name5",\n                "currency": "NGN",\n                "alerted_merchant": false,\n                "merchant_settlement_date": "2022-07-13T13:35:13.410Z",\n                "frozen_transaction": null,\n                "customer": {\n                    "customer_identifier": "123CCC"\n                }\n            },\n            {\n                "transaction_reference": "REF20220707162950_1",\n                "virtual_account_number": "0710954717",\n                "principal_amount": "50.00",\n                "settled_amount": "49.75",\n                "fee_charged": "0.25",\n                "transaction_date": "2022-07-07T16:29:50.000Z",\n                "transaction_indicator": "C",\n                "remarks": "Transfer from Sample Name4 | [12345] to Sample Name",\n                "currency": "NGN",\n                "alerted_merchant": false,\n                "merchant_settlement_date": "2022-07-07T15:30:06.761Z",\n                "frozen_transaction": null,\n                "customer": {\n                    "customer_identifier": "12345"\n                }\n            },\n            {\n                "transaction_reference": "REF20220624160230_1",\n                "virtual_account_number": "0710954717",\n                "principal_amount": "30.00",\n                "settled_amount": "29.85",\n                "fee_charged": "0.15",\n                "transaction_date": "2022-06-24T16:02:30.000Z",\n                "transaction_indicator": "C",\n                "remarks": "Transfer from Sample Name5 | [12345] to Sample Name",\n                "currency": "NGN",\n                "alerted_merchant": false,\n                "merchant_settlement_date": "2022-06-24T15:03:29.054Z",\n                "frozen_transaction": null,\n                "customer": {\n                    "customer_identifier": "12345"\n                }\n            },\n            {\n                "transaction_reference": "REF20220624155515_1",\n                "virtual_account_number": "0710954717",\n                "principal_amount": "30.00",\n                "settled_amount": "29.85",\n                "fee_charged": "0.15",\n                "transaction_date": "2022-06-24T15:55:15.000Z",\n                "transaction_indicator": "C",\n                "remarks": "Transfer from Sample Name4 | [12345] to Sample Name",\n                "currency": "NGN",\n                "alerted_merchant": false,\n                "merchant_settlement_date": "2022-06-24T14:56:23.266Z",\n                "frozen_transaction": null,\n                "customer": {\n                    "customer_identifier": "12345"\n                }\n            },\n            {\n                "transaction_reference": "REF20220623095446_1",\n                "virtual_account_number": "0710954717",\n                "principal_amount": "30.00",\n                "settled_amount": "29.85",\n                "fee_charged": "0.15",\n                "transaction_date": "2022-06-23T09:54:46.000Z",\n                "transaction_indicator": "C",\n                "remarks": "Transfer from Sample Name3 | [12345] to Sample Name",\n                "currency": "NGN",\n                "alerted_merchant": false,\n                "merchant_settlement_date": "2022-06-23T08:55:06.599Z",\n                "frozen_transaction": null,\n                "customer": {\n                    "customer_identifier": "12345"\n                }\n            },\n            {\n                "transaction_reference": "REF20220617131121_1",\n                "virtual_account_number": "0708729381",\n                "principal_amount": "30.00",\n                "settled_amount": "29.85",\n                "fee_charged": "0.15",\n                "transaction_date": "2022-06-17T13:11:21.000Z",\n                "transaction_indicator": "C",\n                "remarks": "Transfer from Sample Name3 | [OPPO] to Sample Name",\n                "currency": "NGN",\n                "alerted_merchant": false,\n                "merchant_settlement_date": "2022-06-17T12:11:38.228Z",\n                "frozen_transaction": null,\n                "customer": {\n                    "customer_identifier": "OPPO"\n                }\n            },\n            {\n                "transaction_reference": "REF20220617130949_1",\n                "virtual_account_number": "0708729381",\n                "principal_amount": "50.00",\n                "settled_amount": "49.75",\n                "fee_charged": "0.25",\n                "transaction_date": "2022-06-17T13:09:49.000Z",\n                "transaction_indicator": "C",\n                "remarks": "Transfer from Sample Name3 | [OPPO] to Sample Name",\n                "currency": "NGN",\n                "alerted_merchant": false,\n                "merchant_settlement_date": "2022-06-17T12:10:14.605Z",\n                "frozen_transaction": null,\n                "customer": {\n                    "customer_identifier": "OPPO"\n                }\n            },\n            {\n                "transaction_reference": "REF20220617125618_1",\n                "virtual_account_number": "0708729381",\n                "principal_amount": "50.00",\n                "settled_amount": "49.75",\n                "fee_charged": "0.25",\n                "transaction_date": "2022-06-17T12:56:18.000Z",\n                "transaction_indicator": "C",\n                "remarks": "Transfer from sample Name1 | [OPPO] to Sample Name",\n                "currency": "NGN",\n                "alerted_merchant": false,\n                "merchant_settlement_date": "2022-06-17T11:56:42.868Z",\n                "frozen_transaction": null,\n                "customer": {\n                    "customer_identifier": "OPPO"\n                }\n            },\n            {\n                "transaction_reference": "REF20220617115436_1",\n                "virtual_account_number": "0709056301",\n                "principal_amount": "50.00",\n                "settled_amount": "49.75",\n                "fee_charged": "0.25",\n                "transaction_date": "2022-06-17T11:54:36.000Z",\n                "transaction_indicator": "C",\n                "remarks": "Transfer from Sample Name3 | [TSP/00002900] to Sample Name",\n                "currency": "NGN",\n                "alerted_merchant": false,\n                "merchant_settlement_date": "2022-06-17T10:54:54.837Z",\n                "frozen_transaction": null,\n                "customer": {\n                    "customer_identifier": "TSP/00002900"\n                }\n            }\n        ],\n        "query": {}\n    }\n}'},{status:"400:Bad Request",responseMsg:"Wrong/ Invalid Input",pill:a.O?.orangeColor,code:'{\n        "status": 400,\n        "success": false,\n        "message": ""virtualAccount" is not allowed to be empty",\n        "data": {}\n}'},{status:"401:Unauthorized",responseMsg:"No API Keys",pill:a.O?.orangeColor,code:'{\n            "success": false,\n            "message": "",\n            "data": {}\n}'},{status:"403:Forbidden",responseMsg:"Invalid Keys/Token",pill:a.O?.orangeColor,code:'{\n            "success": false,\n            "message": "Merchant authentication failed",\n            "data": {}\n}'}],_=[{title:"Path",children:[{key:"virtual_account_number",dataType:"String",description:"Unique 10-digit virtual account number assigned to a customer",required:!0}]}],h=[{status:"200:OK",responseMsg:"Valid Virtual Account Number",pill:a.O?.greenColor,code:'{\n            "status": 200,\n            "success": true,\n            "message": "Success",\n            "data": {\n                "first_name": "Timothy",\n                "last_name": "Oke",\n                "mobile_num": "08000000000",\n                "email": "atioke@gmail.com",\n                "customer_identifier": "CCtyttytC",\n                "virtual_account_number": "0686786837"\n            }\n}'},{status:"404:Not Found",responseMsg:"Invalid Virtual Account Number",pill:a.O?.orangeColor,code:'{\n            "status": 404,\n            "success": false,\n            "message": "Virtual account not found",\n            "data": {}\n}'}],f=[{title:"Path",children:[{key:"customer_identifier",dataType:"String",description:"Unique Customer Identifier that identifies each virtual account",required:!1}]}],b=[{title:"Path",children:[{key:"customer_bvn",dataType:"String",description:"Bank Verification Number of Customer",required:!0},{key:"customer_identifier",dataType:"String",description:"Unique number given to customer by merchant.",required:!0},{key:"phone_number",dataType:"String",description:"customer's phone number",required:!0}]}],T=[{title:"Query",children:[{key:"page",dataType:"String",description:"Number of Pages",required:!1},{key:"perPage",dataType:"String",description:"Number of Accounts to be returned per page",required:!1},{key:"startDate",dataType:"Date",description:"YY-MM-DD",required:!1},{key:"EndDate",dataType:"Date",description:"YY-MM-DD",required:!1}]}],k=[{title:"Body",children:[{key:"beneficiary_account",dataType:"String",description:"10 digit valid NUBAN account number",required:!0},{key:"virtual_account_number",dataType:"String",description:"The Virtual account number whose beneficiary account is to be updated",required:!0}]}],S=[{status:"200:OK",responseMsg:"Successful",pill:a.O?.greenColor,code:'{\n            "status": 200,\n            "success": true,\n            "message": "Success",\n            "data": {\n                "first_name": "Sheena",\n                "last_name": "Grace",\n                "virtual_account_number": "3832649897",\n                "beneficiary_account": "1234567890",\n                "customer_identifier": "2086601683696"\n            }\n}'},{status:"400:Bad Request",responseMsg:"Bad Request",pill:a.O?.orangeColor,code:'{\n            "status": 400,\n            "success": false,\n            "message": ""virtual_account_number" is required",\n            "data": {}\n}'},{status:"401:Unauthorized",responseMsg:"No/Invalid API Key",pill:a.O?.orangeColor,code:'{\n            "success": false,\n            "message": "",\n            "data": {}\n}'}],C=[{title:"Header",children:[{key:"content-type",dataType:"String",description:"application/json",required:!0},{key:"Authorization",dataType:"String",description:"Private Key or Secret Key (Gotten from your dashboard)",required:!0}]},{title:"Body",children:[{key:"virtual_account_number",dataType:"String",description:"Virtual Account number of customer that wants to make payment.",required:!0},{key:"amount",dataType:"String",description:"Simulated Amount",required:!0}]}],O=[{status:"200:OK",responseMsg:"Successful",pill:a.O?.greenColor,code:'{\n            "success": true,\n            "message": "Success",\n            "data": {}\n}'}],N=[{language:"Javascript",headerOne:"Encryption",headerTwo:"Decryption",codeOne:" let key = crypto.createHash('sha256').update(String(merchant_secret_key)).digest('base64').substr(0, 32);\n                let IV = crypto.createHash('sha256').update(String(merchant_public_key)).digest('base64').substr(0, 16);\n                const cipher = crypto.createCipheriv('aes256', key, IV);\n                let encrypted = cipher.update(JSON.stringify(body), 'utf8', 'base64');\n                return encrypted += cipher.final('base64');\n                ",codeTwo:" let key = crypto.createHash('sha256').update(String(merchant_secret_key)).digest('base64').substr(0, 32);\n                let IV = crypto.createHash('sha256').update(String(merchant_public_key)).digest('base64').substr(0, 16);\n                const decipher = crypto.createDecipheriv('aes256', key, IV);\n                let decrypted = decipher.update(body, 'base64', 'utf8');\n                decrypted += decipher.final('utf8');\n                return JSON.parse(decrypted);"}],q=[{language:"Python",codeOne:"from Crypto.Cipher import AES\n                import base64\n                import hashlib\n\n\n                def _pad(s): return s + (AES.block_size - len(s) % AES.block_size) * chr(AES.block_size - len(s) % AES.block_size) \n                def _cipher():\n                    key = hashlib.md5(merchant_secret_key).hexdigest() # 32 character hexadecimal\n                    iv = hashlib.md5(merchant_public_key).digest() # 16 byte binary\n                    return AES.new(key=key, mode=AES.MODE_CBC, IV=iv)\n\n                def encrypt_token(data):\n                    return _cipher().encrypt(_pad(data))\n                    \n                def decrypt_token(data):\n                    return _cipher().decrypt(data)\n\n                if __name__ == '__main__':\n                    print('Python encrypt: ' + base64.b64encode(encrypt_token('dmyz.org')))\n                    print('Python decrypt: ' + decrypt_token(base64.b64decode('FSfhJ/gk3iEJOPVLyFVc2Q==')))"}],v=[{language:"PHP",codeOne:" <?php\n\n            class AES\n            {\n                \n                function encryptToken($data, $merchant_secret_key, $merchant_public_key)\n                {\n                    $key = substr(hash('sha256', $merchant_secret_key, true), 0, 32);\n                    $iv = substr(hash('sha256', $merchant_public_key, true), 0, 16);\n                    // use openssl:\n                    return openssl_encrypt($data, 'aes256', $key, OPENSSL_RAW_DATA, $iv);\n                }\n\n                function decryptToken($data, $merchant_secret_key, $merchant_public_key)\n                {\n                    $key = substr(hash('sha256', $merchant_secret_key, true), 0, 32);\n                $iv = substr(hash('sha256', $merchant_public_key, true), 0, 16);\n                    // use openssl:\n                    return openssl_decrypt(base64_decode($data), 'aes256', $key, OPENSSL_RAW_DATA, $iv);\n                \n                }\n            }\n\n            $aes = new AES();\n            $arr = array(\n            'transaction_reference'=>'49test_1',\n            'virtual_account_number'=>'4899284992',\n            'principal_amount'=> '2350.00',\n            'settled_amount'=> '2338.25',\n            'fee_charged'=> '11.75',\n            'transaction_date'=> '2022-02-19T00:00:00.000Z',\n            'customer_identifier'=> '10A2',\n            'transaction_indicator'=> 'C',\n            'remarks'=> 'Payment from 10A2 to 4899284992',\n            'currency'=> 'NGN',\n            'channel'=> 'virtual-account'\n            );\n\n            echo ('PHP encrypt: '.base64_encode($aes->encryptToken(json_encode($arr), 'staging_sk_sample-secret-key-1', 'staging_pk_sample-public-key-1'))).\"\n\";\n            echo ('PHP decrypt: '.$aes->decryptToken('Ajc/9TOSwbz1lTReb7BTo4XjL7bzJ0GWIxuncvSXfK83ZsYFt4bOt5+QQRz0jFFNSf6+7Axuqp91rR7aD/YwYczQQgUM+7QrK7nTw1KJbwTvPSSk3/IEektOlUx7DK7uXHlBBN9eVmn8tfDLKrsgj7zhymQhCfCoUTcDou3UyYWbKitwGH0o2X3hZo7cVqqq6Khnb12EwlK2kVhZvAjnu5g+T7erI1+RSb3jjab0MguWO6I3oXs9OGsiQKmCqZn564/q3ojArjk5OR8r3jBFgH4d96FoXS536rS8Toh5KPIVSGUjXLthcsWdgQ2VNzqBJ2iktzftFNgQRMdxQFCpaE0JwTKVkAyX0n3JDXt7DC+cTY+cHvAHRtl0zYhhrqT0WX4x95h+/WCdT27FEIJJJqJPBPHS1VAXwPS/v5sPGqdkqgFngTrYPaExk3YWoTxhonzT2tkagsGCaDuk8eptSA==', 'staging_sk_sample-secret-key-1', 'staging_pk_sample-public-key-1')).\"\n\";\n\n            ?>\n                "}],M=[{language:"C#",codeOne:'using System;  \n                using System.IO;  \n                using System.Security.Cryptography;  \n                class ManagedAesSample {  \n                    public static void Main() {  \n                        Console.WriteLine("Enter text that needs to be encrypted..");  \n                        string data = Console.ReadLine();  \n                        EncryptAesManaged(data);  \n                        Console.ReadLine();  \n                    }  \n                    static void EncryptAesManaged(string raw) {  \n                        try {  \n                            // Create Aes that generates a new key and initialization vector (IV).    \n                            // Same key must be used in encryption and decryption    \n                            using(AesManaged aes = new AesManaged()) {  \n                                // Encrypt string    \n                                byte[] encrypted = Encrypt(raw, aes.Key, aes.IV);  \n                                // Print encrypted string    \n                                Console.WriteLine($ "Encrypted data: {System.Text.Encoding.UTF8.GetString(encrypted)}");  \n                                // Decrypt the bytes to a string.    \n                                string decrypted = Decrypt(encrypted, aes.Key, aes.IV);  \n                                // Print decrypted string. It should be same as raw data    \n                                Console.WriteLine($ "Decrypted data: {decrypted}");  \n                            }  \n                        } catch (Exception exp) {  \n                            Console.WriteLine(exp.Message);  \n                        }  \n                        Console.ReadKey();  \n                    }  \n                    static byte[] Encrypt(string plainText, byte[] Key, byte[] IV) {  \n                        byte[] encrypted;  \n                        // Create a new AesManaged.    \n                        using(AesManaged aes = new AesManaged()) {  \n                            // Create encryptor    \n                            ICryptoTransform encryptor = aes.CreateEncryptor(Key, IV);  \n                            // Create MemoryStream    \n                            using(MemoryStream ms = new MemoryStream()) {  \n                                // Create crypto stream using the CryptoStream class. This class is the key to encryption    \n                                // and encrypts and decrypts data from any given stream. In this case, we will pass a memory stream    \n                                // to encrypt    \n                                using(CryptoStream cs = new CryptoStream(ms, encryptor, CryptoStreamMode.Write)) {  \n                                    // Create StreamWriter and write data to a stream    \n                                    using(StreamWriter sw = new StreamWriter(cs))  \n                                    sw.Write(plainText);  \n                                    encrypted = ms.ToArray();  \n                                }  \n                            }  \n                        }  \n                        // Return encrypted data    \n                        return encrypted;  \n                    }  \n                    static string Decrypt(byte[] cipherText, byte[] Key, byte[] IV) {  \n                        string plaintext = null;  \n                        // Create AesManaged    \n                        using(AesManaged aes = new AesManaged()) {  \n                            // Create a decryptor    \n                            ICryptoTransform decryptor = aes.CreateDecryptor(Key, IV);  \n                            // Create the streams used for decryption.    \n                            using(MemoryStream ms = new MemoryStream(cipherText)) {  \n                                // Create crypto stream    \n                                using(CryptoStream cs = new CryptoStream(ms, decryptor, CryptoStreamMode.Read)) {  \n                                    // Read crypto stream    \n                                    using(StreamReader reader = new StreamReader(cs))  \n                                    plaintext = reader.ReadToEnd();  \n                                }  \n                            }  \n                        }  \n                        return plaintext;  \n                    }  \n}  '}],A=[{status:"200:OK",responseMsg:"Success",pill:a.O?.greenColor,code:'{\n            "status": 200,\n            "success": true,\n            "message": "Success",\n            "data": {}\n}'},{status:"401:Unauthorized",responseMsg:"No Authorization",pill:a.O?.orangeColor,code:'{\n            "success": false,\n            "message": "",\n            "data": {}\n}'},{status:"403:Forbidden",responseMsg:"Invalid/Wrong Authorization",pill:a.O?.orangeColor,code:'{\n            "success": false,\n            "message": "Merchant authentication failed",\n            "data": {}\n}'}],x=[{status:"200:OK",responseMsg:"Success",pill:a.O?.greenColor,code:'{\n            "status": 200,\n            "success": true,\n            "message": "Success",\n            "data": {\n                "count_dynamic_virtual_account": 8\n            }\n}'},{status:"401:Unauthorized",responseMsg:"No Authorization",pill:a.O?.orangeColor,code:'{\n            "success": false,\n            "message": "",\n            "data": {}\n}'},{status:"403:Forbidden",responseMsg:"Invalid/Wrong API Keys",pill:a.O?.orangeColor,code:'{\n            "success": false,\n            "message": "Merchant authentication failed",\n            "data": {}\n}'}],I=[{title:"Body",children:[{key:"amount",dataType:"Integer",description:"Amount is in Kobo",required:!0},{key:"duration",dataType:"Integer",description:"Time allowed before an account/transaction is expired. Duration is in seconds. i.e duration:60 = 1 minute",required:!0},{key:"email",dataType:"string",description:"a valid email address for notification to customer",required:!0},{key:"transaction_ref",dataType:"string",description:"Unique transaction Reference that identifies the transaction on your system",required:!0}]}],P=[{status:"200:OK",responseMsg:"Success",pill:a.O?.greenColor,code:'{\n            "status": 200,\n            "success": true,\n            "message": "Success",\n            "data": {\n                "is_blocked": false,\n                "account_name": "SQUAD CHECKOUT",\n                "account_number": "4879261135",\n                "expected_amount": "100.00",\n                "expires_at": "2023-08-08T08:23:27.791Z",\n                "transaction_reference": "dva123",\n                "bank": "GTBank",\n                "currency": "NGN"\n            }\n}'},{status:"401:Unauthorized",responseMsg:"No Authorization",pill:a.O?.orangeColor,code:'{\n            "success": false,\n            "message": "",\n            "data": {}\n}'},{status:"403:Forbidden",responseMsg:"Wrong/Invalid API Keys",pill:a.O?.greenColor,code:'{\n            "success": false,\n            "message": "Merchant authentication failed",\n            "data": {}\n}'}],w=[{title:"Path",children:[{key:"transaction_reference",dataType:"String",description:"Merchant's transaction reference passed when initiating / generating the dynamic virtual account.",required:!0}]}],E=[{status:"200:OK",responseMsg:"Success",pill:a.O?.greenColor,code:'{\n            "status": 200,\n            "success": true,\n            "message": "Success",\n            "data": {\n                "count": 3,\n                "rows": [\n                    {\n                        "transaction_status": "EXPIRED",\n                        "transaction_reference": "Aq1111BddCDqdddqdqqEw4",\n                        "created_at": "2023-08-08T07:02:59.672Z",\n                        "refund": false\n                    },\n                    {\n                        "transaction_status": "SUCCESS",\n                        "transaction_reference": "Aq1111BddCDqdddqdqqEw4",\n                        "created_at": "2023-08-08T07:02:54.052Z",\n                        "refund": null\n                    },\n                    {\n                        "transaction_status": "MISMATCH",\n                        "transaction_reference": "Aq1111BddCDqdddqdqqEw4",\n                        "created_at": "2023-08-08T07:02:29.392Z",\n                        "refund": false\n                    }\n                ]\n            }\n}'},{status:"401:Unauthorized",responseMsg:"No Authorization",pill:a.O?.orangeColor,code:'{\n            "success": false,\n            "message": "",\n            "data": {}\n}'},{status:"403:Forbidden",responseMsg:"Wrong/Invalid API Keys",pill:a.O?.greenColor,code:'{\n            "success": false,\n            "message": "Merchant authentication failed",\n            "data": {}\n}'}],z=[{title:"Body",children:[{key:"transaction_reference",dataType:"String",description:"The transaction ref of the already initiated transaction.",required:!0},{key:"amount",dataType:"Integer",description:"Amount is in Kobo",required:!1},{key:"duration",dataType:"Integer",description:"Amount of time before transaction expires. Duration is in seconds.",required:!1}]}],D=[{status:"200:OK",responseMsg:"Success",pill:a.O?.greenColor,code:'{\n            "status": 200,\n            "success": true,\n            "message": "Success",\n            "data": {\n                "account_number": "0852491446",\n                "currency": "NGN",\n                "amount": 5000,\n                "expires_at": "2023-08-30T17:01:46.973Z",\n                "transaction_reference": "ify21"\n            }\n}'},{status:"401:Unauthorized",responseMsg:"No Authorization",pill:a.O?.orangeColor,code:'{\n            "success": false,\n            "message": "",\n            "data": {}\n}'},{status:"403:Forbidden",responseMsg:"Wrong/Invalid API Keys",pill:a.O?.greenColor,code:'{\n            "success": false,\n            "message": "Merchant authentication failed",\n            "data": {}\n}'},{status:"404:Not Found",responseMsg:"Invalid Transaction Ref",pill:a.O?.greenColor,code:'{\n            "status": 404,\n            "success": false,\n            "message": "Transaction not found",\n            "data": {}\n}'}],K=[{title:"Body",children:[{key:"virtual_account_number",dataType:"String",description:"10-digit Dynamic Account gotten after initiating a virtual transfer. ",required:!0},{key:"amount",dataType:"String",description:"Amount is in naira. This is the expected amount to be transferred into the dynamic virtual account.",required:!0},{key:"dva",dataType:"boolean",description:"true",required:!0}]}],Z=[{status:"200:OK",responseMsg:"Success",pill:a.O?.greenColor,code:'{\n            "status": 200,\n            "success": true,\n            "message": "Success",\n            "data": "Payment successful"\n}'},{status:"401:Unauthorized",responseMsg:"No Authorization",pill:a.O?.orangeColor,code:'{\n            "success": false,\n            "message": "",\n            "data": {}\n}'},{status:"403:Forbidden",responseMsg:"Wrong/Invalid API Keys",pill:a.O?.greenColor,code:'{\n            "success": false,\n            "message": "Merchant authentication failed",\n            "data": {}\n}'}]}}]);