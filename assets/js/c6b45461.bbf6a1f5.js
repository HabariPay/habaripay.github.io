"use strict";(self.webpackChunkhabari_docs=self.webpackChunkhabari_docs||[]).push([[794],{8981:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>l,contentTitle:()=>d,default:()=>p,frontMatter:()=>c,metadata:()=>u,toc:()=>h});var t=a(5893),r=a(1151),s=a(3615),i=a(6775),o=a(2477);const c={sidebar_position:5},d="Aggregator and Sub-merchants",u={id:"Payments/aggregator-and-sub-merchants",title:"Aggregator and Sub-merchants",description:"This API allows you to be profiled as an aggregator and also create sub-merchants dynamically under your account.",source:"@site/docs/Payments/aggregator-and-sub-merchants.mdx",sourceDirName:"Payments",slug:"/Payments/aggregator-and-sub-merchants",permalink:"/Payments/aggregator-and-sub-merchants",draft:!1,unlisted:!1,editUrl:"https://github.com/HabariPay/habaripay.github.io/tree/main/docs/Payments/aggregator-and-sub-merchants.mdx",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"Verify Transaction",permalink:"/Payments/verify-transaction"},next:{title:"Squad Woo Commerce Plugin",permalink:"/Payments/squad-woo-squad-plugin"}},l={},h=[{value:"This API allows you to be profiled as an aggregator and also create sub-merchants dynamically under your account.",id:"this-api-allows-you-to-be-profiled-as-an-aggregator-and-also-create-sub-merchants-dynamically-under-your-account",level:5},{value:"With this, you are able to initiate transactions from a central point for all businesses or sub merchants under you using the same API keys.",id:"with-this-you-are-able-to-initiate-transactions-from-a-central-point-for-all-businesses-or-sub-merchants-under-you-using-the-same-api-keys",level:5},{value:"Create Sub-merchants.",id:"create-sub-merchants",level:3}];function m(e){const n={admonition:"admonition",h1:"h1",h3:"h3",h5:"h5",p:"p",strong:"strong",...(0,r.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"aggregator-and-sub-merchants",children:"Aggregator and Sub-merchants"}),"\n",(0,t.jsx)(n.h5,{id:"this-api-allows-you-to-be-profiled-as-an-aggregator-and-also-create-sub-merchants-dynamically-under-your-account",children:"This API allows you to be profiled as an aggregator and also create sub-merchants dynamically under your account."}),"\n",(0,t.jsx)(n.h5,{id:"with-this-you-are-able-to-initiate-transactions-from-a-central-point-for-all-businesses-or-sub-merchants-under-you-using-the-same-api-keys",children:"With this, you are able to initiate transactions from a central point for all businesses or sub merchants under you using the same API keys."}),"\n",(0,t.jsx)(n.admonition,{type:"note",children:(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Authorization"})," Any request made without the authorization key (secret key) will fail with a 401 (Unauthorized) response code."]})}),"\n",(0,t.jsx)(n.admonition,{type:"info",children:(0,t.jsx)(n.p,{children:"The authorization key is sent via the request header as Bearer Token Authorization"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Example"}),":\nAuthorization: Bearer sandbox_sk_94f2b798466408ef4d19e848ee1a4d1a3e93f104046f"]}),"\n",(0,t.jsx)(n.h3,{id:"create-sub-merchants",children:"Create Sub-merchants."}),"\n",(0,t.jsx)(n.p,{children:"This API is used to create a sub-merchant, the sub-merchant will have its own ID and will automatically have its own view on the dashboard."}),"\n",(0,t.jsx)(s.Z,{items:o.mE,parameters:!0,endpoint:"https://sandbox-api-d.squadco.com/merchant/create-sub-users",method:"POST"}),"\n",(0,t.jsx)(i.C,{items:o.Tm})]})}function p(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(m,{...e})}):m(e)}},2477:(e,n,a)=>{a.d(n,{D5:()=>i,K_:()=>s,Tm:()=>m,mE:()=>h,nN:()=>l,nQ:()=>u,rQ:()=>r,uP:()=>d,x6:()=>c,yJ:()=>o});var t=a(8830);const r=[{title:"Header",children:[{key:"Authorization",dataType:"String",description:"API keys (Secret Key) that authorize your transactions and gotten from your squad dashboard",required:!0}]},{title:"Body",children:[{key:"email",dataType:"String",description:"Customer's email address.",required:!0},{key:"amount",dataType:"String",description:"The amount you are debiting customer (expressed in the lowest currency value - kobo& cent). 10000 = 100NGN for Naira Transactions",required:!0},{key:"initiate_type",dataType:"String",description:"This states the method by which the transaction is initiated. At the moment, this can only take the value 'inline'.",required:!0},{key:"currency",dataType:"String",description:"The currency you want the amount to be charged in. Allowed value is either NGN or USD.",required:!0},{key:"transaction_ref",dataType:"String",description:"This states the method by which the transaction is initiated. At the moment, this can only take the value 'inline'.",required:!1},{key:"customer_name",dataType:"String",description:"Name of Customer carrying out the transaction",required:!1},{key:"callback_url",dataType:"String",description:"Sample: http://squadco.com",required:!1},{key:"payment_channels",dataType:"Array",description:"An array of payment channels to control what channels you want to make available for the user to make a payment with. Available channels include; ['card', 'bank' , 'ussd','transfer']",required:!1},{key:"metadata",dataType:"Object",description:"Object that contains any additional information that you want to record with the transaction. The custom fields in the object will be returned via webhook and the payment verification endpoint.",required:!1},{key:"pass_charge",dataType:"Boolean",description:"It takes two possible values: True or False. It is set to False by default. When set to True, the charges on the transaction is computed and passed on to the customer(payer). But when set to False, the charge is passed to the merchant and will be deducted from the amount to be settled to the merchant.",required:!1},{key:"sub_merchant_id",dataType:"String",description:"This is the ID of a meerchant that was created by an aggregator which allows the aggregator initiate a transaction on behalf of the submerchant. This parameter is an optional field that is passed only by a registered aggregator",required:!1}]}],s=[{status:"200:OK",responseMsg:"Successful",pill:t.O?.greenColor,code:'{\n    "status": 200,\n    "message": "success",\n    "data": {\n        "auth_url": null,\n        "access_token": null,\n        "merchant_info": {\n            "merchant_response": null,\n            "merchant_name": null,\n            "merchant_logo": null,\n            "merchant_id": "SBN1EBZEQ8"\n        },\n        "currency": "NGN",\n        "recurring": {\n            "frequency": null,\n            "duration": null,\n            "type": 0,\n            "plan_code": null,\n            "customer_name": null\n        },\n        "is_recurring": false,\n        "plan_code": null,\n        "callback_url": "http://squadco.com",\n        "transaction_ref": "4678388588350909090AH",\n        "transaction_memo": null,\n        "transaction_amount": 43000,\n        "authorized_channels": [\n            "card",\n            "ussd",\n            "bank"\n        ],\n        "checkout_url": "https://sandbox-pay.squadco.com/4678388588350909090AH"\n    }\n}\n\n'},{status:"401:Unauthorized",responseMsg:"Invalid/No Authorization Key",pill:t.O?.orangeColor,code:'{\n            "status": 401,\n            "message": "Initiate transaction Unauthorized",\n            "data": null\n}'},{status:"400:Bad Request",responseMsg:"Bad Request",pill:t.O?.orangeColor,code:'{\n        "type": "https://tools.ietf.org/html/rfc7231#section-6.5.1",\n        "title": "One or more validation errors occurred.",\n        "status": 400,\n        "traceId": "|8aec540f-493270cdd9661378.",\n        "errors": {\n            "email": [\n                "The email field is required."\n            ]\n        }\n}\n'}],i=[{title:"Body",children:[{key:"amount",dataType:"Integer",description:"Amount to charge from card in the lowest currency value. kobo for NGN transactions or cent for USD transactions",required:!0},{key:"token_id",dataType:"String",description:"A unique tokenization code for each card transaction and it is returned via the webhook for first charge on the card.",required:!0},{key:"transaction_ref",dataType:"String",description:"Unique case-sensitive transaction reference. If you do not pass this parameter, Squad will generate a unique reference for you.",required:!1}]}],o=[{status:"200:OK",responseMsg:"Successful",pill:t.O?.greenColor,code:'{\n            "status": 200,\n            "success": true,\n            "message": "Success",\n            "data": {\n                "transaction_amount": 0,\n                "transaction_ref": null,\n                "email": null,\n                "transaction_status": null,\n                "transaction_currency_id": null,\n                "created_at": "0001-01-01T00:00:00",\n                "transaction_type": null,\n                "merchant_name": null,\n                "merchant_business_name": null,\n                "gateway_transaction_ref": null,\n                "recurring": null,\n                "merchant_email": null,\n                "plan_code": null\n            }\n}'},{status:"400:Bad Request",responseMsg:"Bad Request",pill:t.O?.orangeColor,code:'{\n            "status": 400,\n            "success": false,\n            "message": "amount cannot be < 0",\n            "data": {}\n}'}],c=[{title:"Query",children:[{key:"currency",dataType:"string",description:"transacting currency",required:!1},{key:"start_date",dataType:"date",description:"start date of transaction",required:!0},{key:"end_date",dataType:"date",description:"end date of transaction",required:!0},{key:"page",dataType:"integer",description:"number of transactions to be displayed in a page",required:!1},{key:"perpage",dataType:"integer",description:"number of transactions to be displayed in a page",required:!1},{key:"reference",dataType:"string",description:"transaction ref of a transaction",required:!1}]}],d=[{status:"200:OK",responseMsg:"Success",pill:t.O?.greenColor,code:'"status": 200,\n    "success": true,\n    "message": "Success",\n    "data": [\n        {\n            "id": 589,\n            "transaction_amount": 500000,\n            "transaction_ref": "SQDEMO6384411820295800001",\n            "email": "demo@merchant.com",\n            "merchant_id": "AABBCCDDEEFFGGHHJJKK",\n            "merchant_amount": 495000,\n            "merchant_name": "Demo Habari Shop",\n            "merchant_business_name": "Ogbologba and Sons Limited",\n            "merchant_email": "demo@merchant.com",\n            "customer_email": "demo@merchant.com",\n            "customer_name": "Test QA",\n            "meta_data": "{"ip_address":"154.113.177.121","Customer_name":"Test QA","user_agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/121.0.0.0 Safari/537.36","referring_site":"https://pay.squadinc.co/","payment_link_id":"GH9Y19","payment_link_type":"otp","source":"Desktop","device_id":null,"order_id":null,"auth_code":null,"fingerprintData":null,"callback_url":null,"initiate_type":null,"browser_screen_height":695,"browser_screen_width":1536,"referrer_url":"https://pay.squadinc.co/","extra":"{}"}",\n            "meta": {\n                "ip_address": [],\n                "Customer_name": [],\n                "user_agent": [],\n                "referring_site": [],\n                "payment_link_id": [],\n                "payment_link_type": [],\n                "source": [],\n                "device_id": [],\n                "order_id": [],\n                "auth_code": [],\n                "fingerprintData": [],\n                "callback_url": [],\n                "initiate_type": [],\n                "browser_screen_height": [],\n                "browser_screen_width": [],\n                "referrer_url": [],\n                "extra": []\n            },\n            "transaction_status": "success",\n            "transaction_charges": 0,\n            "transaction_currency_id": "NGN",\n            "transaction_gateway_id": "",\n            "transaction_type": "Card",\n            "flat_charge": 0,\n            "is_suspicious": false,\n            "is_refund": false,\n            "created_at": "2024-02-21T13:16:43.012+00:00"\n}'}],u=[{title:"Query",children:[{key:"transaction_ref",dataType:"String",description:"Unique transaction reference that identifies each transaction",required:!0}]}],l=[{status:"200:OK",responseMsg:"Valid Transaction Reference",pill:t.O?.greenColor,code:'{\n            "status": 200,\n            "success": true,\n            "message": "Success",\n            "data": {\n                "transaction_amount": 5000,\n                "transaction_ref": "SQCHIZ3634573076082",\n                "email": "ayo@gmail.com",\n                "transaction_status": "Success",\n                "transaction_currency_id": "NGN",\n                "created_at": "0001-01-01T00:00:00",\n                "transaction_type": "VirtualAccount",\n                "merchant_name": "CHIZOBA ANTHONY",\n                "merchant_business_name": null,\n                "gateway_transaction_ref": "SQCHIZ3634573076082",\n                "recurring": null,\n                "merchant_email": "okoyeanthonychizoba@gmail.com",\n                "plan_code": null\n            }\n}\n'},{status:"400:Bad Request",responseMsg:"Invalid Transaction Reference",pill:t.O?.orangeColor,code:'{\n            "status": 400,\n            "success": false,\n            "message": "Invalid transaction reference",\n            "data": {}\n}'},{status:"401:Unauthorized",responseMsg:"Unauthorized Request",pill:t.O?.orangeColor,code:'{\n            "success": false,\n            "message": "",\n            "data": {}\n}'},{status:"403:Forbidden",responseMsg:"Invalid API Key",pill:t.O?.orangeColor,code:'{\n            "success": false,\n            "message": "API key is invalid. Key must start with sandbox_sk_",\n            "data": {}\n}'}],h=[{title:"Body",children:[{key:"display_name",dataType:"String",description:"Name of sub-merchant",required:!0},{key:"account_name",dataType:"String",description:"Sub-merchant's settlement bank account name",required:!0},{key:"account_number",dataType:"String",description:"Sub-merchant's settlement account number",required:!0},{key:"bank_code",dataType:"String",description:"Sub-merchant's settlement bank code. e.g 058",required:!0},{key:"bank",dataType:"String",description:"Name of sub-merchant's settlement bank e.g GTBank",required:!0}]}],m=[{status:"200:OK",responseMsg:"Success",pill:t.O?.greenColor,code:'{\n      "status": 200,\n      "success": true,\n      "message": "Success",\n      "data": {\n          "account_id": "AGGERYG8WF34"\n      }\n}'},{status:"400:Bad Request",responseMsg:"Error in request payload",pill:t.O?.orangeColor,code:'{\n      "status": 400,\n      "success": false,\n      "message": ""account_number" is required",\n      "data": {}\n}'},{status:"401:Unauthorized",responseMsg:"No Authorization",pill:t.O?.orangeColor,code:'{\n      "success": false,\n      "message": "",\n      "data": {}\n}'},{status:"403:Forbidden",responseMsg:"Wrong/Invalid API Keys",pill:t.O?.orangeColor,code:'{\n      "success": false,\n      "message": "Merchant authentication failed",\n      "data": {}\n}'}]},8830:(e,n,a)=>{a.d(n,{O:()=>t});const t={greenColor:"bg-[#217837]",orangeColor:"bg-[#A94A09]"}}}]);